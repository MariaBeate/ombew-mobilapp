{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\n\nvar Fitnessinfo = function (_React$Component) {\n  _inherits(Fitnessinfo, _React$Component);\n\n  var _super = _createSuper(Fitnessinfo);\n\n  function Fitnessinfo(props) {\n    var _this;\n\n    _classCallCheck(this, Fitnessinfo);\n\n    _this = _super.call(this, props);\n\n    _this.loadEvents = function (day) {\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents\").then(function (response) {\n        return response.json();\n      }).then(function (events) {\n        console.log(\"events: \" + JSON.stringify(events));\n        return events;\n      }).then(function (events) {\n        var eventsFormatted = {};\n\n        if (events.length) {\n          events.map(function (event) {\n            var day = event.date;\n\n            if (eventsFormatted[day]) {\n              eventsFormatted[day].push(event);\n            } else {\n              eventsFormatted[day] = [event];\n            }\n          });\n\n          _this.setState({\n            eventsFormatted: eventsFormatted\n          });\n\n          console.log(\"eventsFormatted: \" + JSON.stringify(eventsFormatted));\n        }\n      });\n    };\n\n    _this.state = {\n      events: [],\n      eventsFormatted: {}\n    };\n    return _this;\n  }\n\n  _createClass(Fitnessinfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadEvents();\n      this.focusListener = this.props.navigation.addListener(\"focus\", function () {\n        return _this2.loadEvents();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusListener();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\",\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Agenda, {\n        selected: \"2020-09-03\",\n        items: this.state.eventsFormatted,\n        loadItemsForMonth: this.loadEvents,\n        events: this.state.eventsFormatted,\n        onPressEvent: function onPressEvent(event) {\n          return _this3.props.navigation.navigate(\"Login\", {\n            event: event\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Fitnessinfo;\n}(React.Component);\n\nexport { Fitnessinfo as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","Component","Calendar","CalendarList","Agenda","Fitnessinfo","props","loadEvents","day","fetch","then","response","json","events","console","log","JSON","stringify","eventsFormatted","length","map","event","date","push","setState","state","focusListener","navigation","addListener","flex","backgroundColor","paddingBottom","navigate"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAUA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,QAA+C,wBAA/C;;IAEqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAmBnBC,UAnBmB,GAmBN,UAACC,GAAD,EAAS;AAEpBC,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADR,EAEGF,IAFH,CAEQ,UAACG,MAAD,EAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,cAAuBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAvB;AACA,eAAOA,MAAP;AACD,OALH,EAMGH,IANH,CAMQ,UAACG,MAAD,EAAY;AAChB,YAAIK,eAAe,GAAG,EAAtB;;AACA,YAAIL,MAAM,CAACM,MAAX,EAAmB;AACjBN,UAAAA,MAAM,CAACO,GAAP,CAAW,UAACC,KAAD,EAAW;AACpB,gBAAIb,GAAG,GAAGa,KAAK,CAACC,IAAhB;;AACA,gBAAIJ,eAAe,CAACV,GAAD,CAAnB,EAA0B;AACxBU,cAAAA,eAAe,CAACV,GAAD,CAAf,CAAqBe,IAArB,CAA0BF,KAA1B;AACD,aAFD,MAEO;AACLH,cAAAA,eAAe,CAACV,GAAD,CAAf,GAAuB,CAACa,KAAD,CAAvB;AACD;AACF,WAPD;;AAQA,gBAAKG,QAAL,CAAc;AACZN,YAAAA,eAAe,EAAEA;AADL,WAAd;;AAGAJ,UAAAA,OAAO,CAACC,GAAR,uBAAgCC,IAAI,CAACC,SAAL,CAAeC,eAAf,CAAhC;AACD;AACF,OAtBH;AAuBD,KA5CkB;;AAEjB,UAAKO,KAAL,GAAa;AACXZ,MAAAA,MAAM,EAAE,EADG;AAEXK,MAAAA,eAAe,EAAE;AAFN,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAAA;;AAClB,WAAKX,UAAL;AACA,WAAKmB,aAAL,GAAqB,KAAKpB,KAAL,CAAWqB,UAAX,CAAsBC,WAAtB,CAAkC,OAAlC,EAA2C;AAAA,eAC9D,MAAI,CAACrB,UAAL,EAD8D;AAAA,OAA3C,CAArB;AAGD;;;2CAEsB;AACrB,WAAKmB,aAAL;AACD;;;6BA6BQ;AAAA;;AACP,aACE,0CACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,eAAe,EAAE,OAA5B;AAAqCC,UAAAA,aAAa,EAAE;AAApD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAEE,QAAA,QAAQ,EAAE,YAFZ;AAGE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWP,eAHpB;AAIE,QAAA,iBAAiB,EAAE,KAAKX,UAJ1B;AAME,QAAA,MAAM,EAAE,KAAKkB,KAAL,CAAWP,eANrB;AAOE,QAAA,YAAY,EAAE,sBAACG,KAAD;AAAA,iBACZ,MAAI,CAACf,KAAL,CAAWqB,UAAX,CAAsBK,QAAtB,CAA+B,OAA/B,EAAwC;AAAEX,YAAAA,KAAK,EAALA;AAAF,WAAxC,CADY;AAAA,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAiBD;;;;EAjEsCrB,KAAK,CAACC,S;;SAA1BI,W","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  FlatList,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\n\r\nexport default class Fitnessinfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: [],\r\n      eventsFormatted: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.focusListener = this.props.navigation.addListener(\"focus\", () =>\r\n      this.loadEvents()\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.focusListener();\r\n  }\r\n\r\n  loadEvents = (day) => {\r\n    //Charge les items du mois\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents\")\r\n      .then((response) => response.json())\r\n      .then((events) => {\r\n        console.log(`events: ${JSON.stringify(events)}`);\r\n        return events;\r\n      })\r\n      .then((events) => {\r\n        var eventsFormatted = {};\r\n        if (events.length) {\r\n          events.map((event) => {\r\n            let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n            if (eventsFormatted[day]) {\r\n              eventsFormatted[day].push(event);\r\n            } else {\r\n              eventsFormatted[day] = [event];\r\n            }\r\n          });\r\n          this.setState({\r\n            eventsFormatted: eventsFormatted,\r\n          });\r\n          console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n          <Agenda\r\n            //style={styles.calendar}\r\n            selected={\"2020-09-03\"}\r\n            items={this.state.eventsFormatted}\r\n            loadItemsForMonth={this.loadEvents}\r\n            //loadEvents={(day) => this.loadEvents(day)}\r\n            events={this.state.eventsFormatted}\r\n            onPressEvent={(event) =>\r\n              this.props.navigation.navigate(\"Login\", { event })\r\n            }\r\n          />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}