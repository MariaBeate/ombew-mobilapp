{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { SearchBar } from \"react-native-elements\";\n\nvar Fitnessinfo = function (_Component) {\n  _inherits(Fitnessinfo, _Component);\n\n  var _super = _createSuper(Fitnessinfo);\n\n  function Fitnessinfo(props) {\n    var _this;\n\n    _classCallCheck(this, Fitnessinfo);\n\n    _this = _super.call(this, props);\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.loadEvents = function (day) {\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents\").then(function (response) {\n        return response.json();\n      }).then(function (events) {\n        console.log(\"events: \" + JSON.stringify(events));\n        return events;\n      }).then(function (events) {\n        var eventsFormatted = {};\n\n        if (events.length) {\n          events.map(function (event) {\n            var day = event.date;\n\n            if (eventsFormatted[day]) {\n              eventsFormatted[day].push(event);\n            } else {\n              eventsFormatted[day] = [event];\n            }\n          });\n\n          _this.setState({\n            eventsFormatted: eventsFormatted\n          });\n\n          console.log(\"eventsFormatted: \" + JSON.stringify(eventsFormatted));\n        }\n      });\n    };\n\n    _this._deleteEvent = _this._deleteEvent.bind(_assertThisInitialized(_this));\n    _this.loadEvents = _this.loadEvents.bind(_assertThisInitialized(_this));\n    _this.state = {\n      events: [],\n      eventsFormatted: {},\n      search: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Fitnessinfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadEvents();\n      this.focusListener = this.props.navigation.addListener(\"focus\", function () {\n        return _this2.loadEvents();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusListener();\n    }\n  }, {\n    key: \"_deleteEvent\",\n    value: function _deleteEvent(id) {\n      var _this3 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n      var events = this.state;\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents/\" + id, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function () {\n        _this3.setState({\n          events: events.filter(function (event) {\n            return event.id !== id;\n          })\n        });\n\n        return;\n      }).catch(function (error) {\n        throw error;\n      });\n      this.forceUpdate();\n      console.log(\"Deleted\");\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, item.name), React.createElement(Button, {\n        title: \"Edit\",\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate(\"EditCalendar\", {\n            id: item.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Delete\",\n        onPress: function onPress() {\n          return _this4._deleteEvent(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n      var search = this.state.search;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\",\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: this.updateSearch,\n        value: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Add\",\n        onPress: function onPress() {\n          return _this5.props.navigation.navigate(\"AddToCalendar\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }), React.createElement(Agenda, {\n        selected: \"2020-09-04\",\n        items: eventsFormatted,\n        loadItemsForMonth: this.loadEvents,\n        renderItem: this.renderItem.bind(this),\n        renderEmptyData: function renderEmptyData() {\n          return null;\n        },\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        events: this.state.eventsFormatted,\n        onPressEvent: function onPressEvent(event) {\n          return _this5.props.navigation.navigate(\"Login\", {\n            event: event\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Fitnessinfo;\n}(Component);\n\nexport { Fitnessinfo as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","Component","Calendar","CalendarList","Agenda","SearchBar","Fitnessinfo","props","updateSearch","search","setState","loadEvents","day","fetch","then","response","json","events","console","log","JSON","stringify","eventsFormatted","length","map","event","date","push","_deleteEvent","bind","state","focusListener","navigation","addListener","id","method","headers","Accept","filter","catch","error","forceUpdate","item","name","navigate","flex","backgroundColor","paddingBottom","renderItem","renderEmptyDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  FlatList,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n  Platform,\r\n  Text,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { SearchBar } from \"react-native-elements\";\r\n\r\nexport default class Fitnessinfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._deleteEvent = this._deleteEvent.bind(this);\r\n    this.loadEvents = this.loadEvents.bind(this);\r\n    this.state = {\r\n      events: [],\r\n      eventsFormatted: {},\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.focusListener = this.props.navigation.addListener(\"focus\", () =>\r\n      this.loadEvents()\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.focusListener();\r\n  }\r\n\r\n  updateSearch = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  loadEvents = (day) => {\r\n    //Charge les items du mois\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents\")\r\n      .then((response) => response.json())\r\n      .then((events) => {\r\n        console.log(`events: ${JSON.stringify(events)}`);\r\n        return events;\r\n      })\r\n      .then((events) => {\r\n        var eventsFormatted = {};\r\n        if (events.length) {\r\n          events.map((event) => {\r\n            let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n            if (eventsFormatted[day]) {\r\n              eventsFormatted[day].push(event);\r\n            } else {\r\n              eventsFormatted[day] = [event];\r\n            }\r\n          });\r\n          this.setState({\r\n            eventsFormatted: eventsFormatted,\r\n          });\r\n          console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n        }\r\n      });\r\n  };\r\n\r\n  //to do: delete by unique id\r\n  _deleteEvent(id) {\r\n    const { eventsFormatted } = this.state;\r\n    const events = this.state;\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          events: events.filter((event) => event.id !== id),\r\n        });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    this.forceUpdate();\r\n    console.log(\"Deleted\");\r\n  }\r\n\r\n  renderItem(item) {\r\n    // console.log(item.name);\r\n    return (\r\n      <View>\r\n        <Text>{item.name}</Text>\r\n        <Button\r\n          title=\"Edit\"\r\n          onPress={() =>\r\n            this.props.navigation.navigate(\"EditCalendar\", {\r\n              id: item.id,\r\n            })\r\n          }\r\n        ></Button>\r\n        <Button\r\n          title=\"Delete\"\r\n          onPress={() => this._deleteEvent(item.id)}\r\n        ></Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  /* renderDay() {\r\n    return (\r\n      <View>\r\n        <Button title=\"Add\"></Button>\r\n      </View>\r\n    );\r\n  }*/\r\n\r\n  render() {\r\n    const eventsFormatted = this.state.eventsFormatted;\r\n    const { search } = this.state;\r\n\r\n    return (\r\n      <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n        <SearchBar\r\n          placeholder=\"Type Here...\"\r\n          onChangeText={this.updateSearch}\r\n          value={search}\r\n        />\r\n        <Button\r\n          title=\"Add\"\r\n          onPress={() => this.props.navigation.navigate(\"AddToCalendar\")}\r\n        ></Button>\r\n        <Agenda\r\n          //style={styles.calendar}\r\n          selected={\"2020-09-04\"}\r\n          items={eventsFormatted}\r\n          loadItemsForMonth={this.loadEvents}\r\n          renderItem={this.renderItem.bind(this)}\r\n          // renderDay={this.renderDay.bind(this)}\r\n          renderEmptyData={() => null}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n          //loadEvents={(day) => this.loadEvents(day)}\r\n          events={this.state.eventsFormatted}\r\n          onPressEvent={(event) =>\r\n            this.props.navigation.navigate(\"Login\", { event })\r\n          }\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}