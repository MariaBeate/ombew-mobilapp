{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Agenda } from \"react-native-calendars\";\nimport { SearchBar } from \"react-native-elements\";\n\nvar Fitnessplan = function (_Component) {\n  _inherits(Fitnessplan, _Component);\n\n  var _super = _createSuper(Fitnessplan);\n\n  function Fitnessplan(props) {\n    var _this;\n\n    _classCallCheck(this, Fitnessplan);\n\n    _this = _super.call(this, props);\n\n    _this.updateSearch = function (text) {\n      _this.setState({\n        search: text\n      });\n    };\n\n    _this.searchText = function () {\n      console.log(\"hier\");\n      var events = _this.state.events;\n      var search = _this.state.search;\n\n      for (var i = 0; i < events.length; i++) {\n        if (events[i].name === search) {\n          console.log(\"Gefunden\");\n        } else {\n          console.log(\"Nicht gefunden\");\n        }\n      }\n    };\n\n    _this.loadEvents = function (day) {\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents\").then(function (response) {\n        return response.json();\n      }).then(function (events) {\n        console.log(\"events: \" + JSON.stringify(events));\n        return events;\n      }).then(function (events) {\n        var eventsFormatted = {};\n\n        if (events.length) {\n          events.map(function (event) {\n            var day = event.date;\n\n            if (eventsFormatted[day]) {\n              eventsFormatted[day].push(event);\n            } else {\n              eventsFormatted[day] = [event];\n            }\n          });\n\n          _this.setState({\n            eventsFormatted: eventsFormatted\n          });\n\n          console.log(\"eventsFormatted: \" + JSON.stringify(eventsFormatted));\n        }\n      });\n    };\n\n    _this.searchText = _this.searchText.bind(_assertThisInitialized(_this));\n    _this.loadEvents = _this.loadEvents.bind(_assertThisInitialized(_this));\n    _this.state = {\n      events: [],\n      eventsFormatted: {},\n      search: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Fitnessplan, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadEvents();\n      this.focusListener = this.props.navigation.addListener(\"focus\", function () {\n        return _this2.loadEvents();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusListener();\n    }\n  }, {\n    key: \"showSearchResults\",\n    value: function showSearchResults() {\n      var events = this.state.events;\n      var eventsFormatted = {};\n      events.map(function (event) {\n        var day = event.date;\n\n        if (eventsFormatted[day]) {\n          eventsFormatted[day].push(event);\n        } else {\n          eventsFormatted[day] = [event];\n        }\n      });\n      this.setState({\n        eventsFormatted: eventsFormatted\n      });\n      console.log(\"eventsFormatted: \" + JSON.stringify(eventsFormatted));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var height = \"150\";\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\",\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          _this3.updateSearch(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Search\",\n        onPress: function onPress() {\n          return _this3.searchText();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }), React.createElement(Agenda, {\n        selected: \"2020-09-04\",\n        items: eventsFormatted,\n        loadItemsForMonth: this.loadEvents,\n        renderItem: this.renderItem.bind(this),\n        renderEmptyData: function renderEmptyData() {\n          return null;\n        },\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        events: this.state.eventsFormatted,\n        onPressEvent: function onPressEvent(event) {\n          return _this3.props.navigation.navigate(\"Login\", {\n            event: event\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Fitnessplan;\n}(Component);\n\nexport { Fitnessplan as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","Component","Agenda","SearchBar","Fitnessplan","props","updateSearch","text","setState","search","searchText","console","log","events","state","i","length","name","loadEvents","day","fetch","then","response","json","JSON","stringify","eventsFormatted","map","event","date","push","bind","focusListener","navigation","addListener","item","height","flex","justifyContent","backgroundColor","paddingBottom","renderItem","renderEmptyDate","navigate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { StyleSheet, View, Text, Button, TextInput } from \"react-native\";\r\nimport { Agenda } from \"react-native-calendars\";\r\nimport { SearchBar } from \"react-native-elements\";\r\n\r\nexport default class Fitnessplan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //this.filterCalendar = this.filterCalendar.bind(this);\r\n    this.searchText = this.searchText.bind(this);\r\n\r\n    this.loadEvents = this.loadEvents.bind(this);\r\n    this.state = {\r\n      events: [],\r\n      eventsFormatted: {},\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.focusListener = this.props.navigation.addListener(\"focus\", () =>\r\n      this.loadEvents()\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.focusListener();\r\n  }\r\n  updateSearch = (text) => {\r\n    this.setState({\r\n      search: text,\r\n    });\r\n  };\r\n  /*filterCalendar = () => {\r\n    var eventsFormatted = this.state.eventsFormatted;\r\n    const search = this.state.search;\r\n    const filtered = Object.keys(eventsFormatted)\r\n      .filter((name) => search.includes(name))\r\n      .reduce((obj, name) => {\r\n        obj[name] = eventsFormatted[name];\r\n        console.log(obj[name]);\r\n        return obj;\r\n      }, {});\r\n    this.setState({ eventsFormatted: filtered });\r\n    /*this.setState({\r\n      events: events.filter((event) => event.name == search),\r\n    });\r\n    return this.state.events;\r\n    console.log(this.state.events);\r\n    console.log(this.state.search);*/\r\n  //};\r\n\r\n  searchText = () => {\r\n    console.log(\"hier\");\r\n    const events = this.state.events;\r\n    const search = this.state.search;\r\n    /*if (events.name.includes(search)) {\r\n      this.setState({\r\n        events: events.filter((event) => event.name == search),\r\n      });*/\r\n    for (var i = 0; i < events.length; i++) {\r\n      if (events[i].name === search) {\r\n        console.log(\"Gefunden\");\r\n      } else {\r\n        console.log(\"Nicht gefunden\");\r\n      }\r\n      // console.log(events);\r\n      // this.showSearchResults();\r\n    }\r\n  };\r\n\r\n  showSearchResults() {\r\n    const events = this.state.events;\r\n    var eventsFormatted = {};\r\n    events.map((event) => {\r\n      let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n      if (eventsFormatted[day]) {\r\n        eventsFormatted[day].push(event);\r\n      } else {\r\n        eventsFormatted[day] = [event];\r\n      }\r\n    });\r\n    this.setState({\r\n      eventsFormatted: eventsFormatted,\r\n    });\r\n    console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n  }\r\n  loadEvents = (day) => {\r\n    //Charge les items du mois\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents\")\r\n      .then((response) => response.json())\r\n      .then((events) => {\r\n        console.log(`events: ${JSON.stringify(events)}`);\r\n        return events;\r\n      })\r\n      .then((events) => {\r\n        var eventsFormatted = {};\r\n        if (events.length) {\r\n          events.map((event) => {\r\n            let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n\r\n            if (eventsFormatted[day]) {\r\n              eventsFormatted[day].push(event);\r\n            } else {\r\n              eventsFormatted[day] = [event];\r\n            }\r\n          });\r\n          this.setState({\r\n            eventsFormatted: eventsFormatted,\r\n          });\r\n          console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n        }\r\n      });\r\n  };\r\n\r\n  renderItem(item) {\r\n    // console.log(item.name);\r\n    const height = \"150\";\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n        <Text>{item.name}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  /* renderDay() {\r\n    return (\r\n      <View>\r\n        <Button title=\"Add\"></Button>\r\n      </View>\r\n    );\r\n  }*/\r\n\r\n  render() {\r\n    const eventsFormatted = this.state.eventsFormatted;\r\n\r\n    return (\r\n      <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n        <TextInput\r\n          placeholder=\"Type Here...\"\r\n          onChangeText={(text) => {\r\n            this.updateSearch(text);\r\n          }}\r\n          //value={search}\r\n        />\r\n        <Button title=\"Search\" onPress={() => this.searchText()}></Button>\r\n        <Agenda\r\n          //style={styles.calendar}\r\n          selected={\"2020-09-04\"}\r\n          items={eventsFormatted}\r\n          loadItemsForMonth={this.loadEvents}\r\n          renderItem={this.renderItem.bind(this)}\r\n          // renderDay={this.renderDay.bind(this)}\r\n          renderEmptyData={() => null}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n          //loadEvents={(day) => this.loadEvents(day)}\r\n          events={this.state.eventsFormatted}\r\n          onPressEvent={(event) =>\r\n            this.props.navigation.navigate(\"Login\", { event })\r\n          }\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}