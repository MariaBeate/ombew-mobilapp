{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ThemeContext from \"./screens/theme-context\";\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\nvar Stack = createStackNavigator();\n\nfunction NavStack(navigation) {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: \"center\",\n      headerStyle: {\n        backgroundColor: \"#621FF7\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      title: \"Home\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Fitnessplan\",\n    component: Fitnessplan,\n    options: {\n      title: \"Fitnessplan\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Fitnessinfo\",\n    component: Fitnessinfo,\n    options: {\n      title: \"Fitnessinfo\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    options: {\n      title: \"Login\"\n    },\n    initialParams: {\n      handleLogin: handleLogin,\n      onChangeUsername: onChangeUsername,\n      onChangePassword: onChangePassword\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddCourse\",\n    component: AddCourse,\n    options: {\n      title: \"AddCourse\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EditCourse\",\n    component: EditCourse,\n    options: {\n      title: \"EditCourse\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeUsername = function (text) {\n      _this.setState({\n        username: text\n      });\n    };\n\n    _this.onChangePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this2 = this;\n\n      fetch(\"http://192.168.0.176:9000/api/login\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        var token = response.token;\n\n        _this2.setState({\n          token: token\n        });\n\n        localStorage.setItem(\"token\", _this2.state.token);\n        if (token != null) _this2.setState({\n          isLoggedIn: true\n        });\n        console.log(\"Eingeloggt\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      localStorage.removeItem(\"token\");\n      this.setState({\n        isLoggedIn: false\n      });\n      console.log(\"Ausgeloggt\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, React.createElement(NavStack, {\n        screenProps: (this.state, {\n          handleLogin: this.handleLogin\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","ThemeContext","Home","Fitnessplan","Fitnessinfo","Login","EditCourse","AddCourse","Stack","NavStack","navigation","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","handleLogin","onChangeUsername","onChangePassword","App","props","text","setState","username","password","bind","state","token","isLoggedIn","Boolean","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","response","localStorage","setItem","console","log","catch","err","removeItem"],"mappings":"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","sourcesContent":["// App.js\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Button, View, Text } from \"react-native\";\nimport ThemeContext from \"./screens/theme-context\";\n\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\n\n//import credentials from \"./screens/data/credentials.json\";\n\nconst Stack = createStackNavigator();\n\n//Login und Fitnessinfo funktioniert bislang nur auf dem Desktop (nicht mobile)\nfunction NavStack(navigation) {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerTitleAlign: \"center\",\n        headerStyle: {\n          backgroundColor: \"#621FF7\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          title: \"Home\",\n        }}\n      />\n      <Stack.Screen\n        name=\"Fitnessplan\"\n        component={Fitnessplan}\n        options={{ title: \"Fitnessplan\" }}\n      />\n      <Stack.Screen\n        name=\"Fitnessinfo\"\n        component={Fitnessinfo}\n        options={{ title: \"Fitnessinfo\" }}\n      />\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ title: \"Login\" }}\n        initialParams={{\n          handleLogin: handleLogin,\n          onChangeUsername: onChangeUsername,\n          onChangePassword: onChangePassword,\n        }}\n      />\n      <Stack.Screen\n        name=\"AddCourse\"\n        component={AddCourse}\n        options={{ title: \"AddCourse\" }}\n      />\n      <Stack.Screen\n        name=\"EditCourse\"\n        component={EditCourse}\n        options={{ title: \"EditCourse\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean,\n    };\n  }\n\n  onChangeUsername = (text) => {\n    this.setState({\n      username: text,\n    });\n  };\n  onChangePassword = (text) => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  handleLogin() {\n    //console.log(this.props.history);\n    fetch(\"http://192.168.0.176:9000/api/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        const token = response.token;\n        this.setState({\n          token: token,\n        });\n        localStorage.setItem(\"token\", this.state.token);\n        if (token != null)\n          this.setState({\n            isLoggedIn: true,\n          });\n        // history.push(\"/FitnessInfoAdmin\");\n        console.log(\"Eingeloggt\");\n      })\n\n      .catch((err) => console.log(err));\n  }\n\n  handleLogout() {\n    localStorage.removeItem(\"token\");\n    this.setState({\n      isLoggedIn: false,\n    });\n    console.log(\"Ausgeloggt\");\n  }\n  render() {\n    return (\n      <NavigationContainer>\n        <NavStack\n          screenProps={(this.state, { handleLogin: this.handleLogin })}\n        />\n      </NavigationContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}