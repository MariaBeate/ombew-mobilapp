{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\admin\\\\EditCalendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DatePicker from \"react-native-datepicker\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nvar EditCalendar = function (_Component) {\n  _inherits(EditCalendar, _Component);\n\n  var _super = _createSuper(EditCalendar);\n\n  function EditCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EditCalendar);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeDate = function (text) {\n      _this.setState({\n        date: text\n      });\n    };\n\n    _this.onChangeName = function (text) {\n      _this.setState({\n        name: text\n      });\n    };\n\n    _this.onChangeDate = _this.onChangeDate.bind(_assertThisInitialized(_this));\n    _this.onChangeName = _this.onChangeName.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      courseList: {\n        id: null,\n        name: \"\",\n        price: \"\",\n        description: \"\",\n        submitted: false\n      },\n      date: \"\",\n      name: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      fetch(\"http://192.168.178.23:9000/api/fitnessevent/\" + this.props.route.params.id, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: this.state.date,\n          name: this.state.name\n        })\n      }).then(function (res) {\n        return res.json();\n      }).catch(function (error) {\n        throw error;\n      });\n      this.props.navigation.goBack(\"Fitnessplan\");\n      console.log(\"Edited\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"Edit Screen\"), React.createElement(DateTimePicker, {\n        value: new Date(2020, 9, 4),\n        mode: \"date\",\n        is24Hour: true,\n        display: \"default\",\n        onChange: function onChange(date) {\n          _this2.setState({\n            date: date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderColor: \"gray\",\n          borderWidth: 1,\n          width: 300\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.onChangeName(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Edit\",\n        onPress: function onPress() {\n          return _this2.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return EditCalendar;\n}(Component);\n\nexport { EditCalendar as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/admin/EditCalendar.js"],"names":["React","Component","DatePicker","DateTimePicker","EditCalendar","props","onChangeDate","text","setState","date","onChangeName","name","bind","handleSubmit","state","courseList","id","price","description","submitted","fetch","route","params","method","headers","Accept","body","JSON","stringify","then","res","json","catch","error","navigation","goBack","console","log","flex","alignItems","justifyContent","Date","height","borderColor","borderWidth","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { View, Text, TextInput, Button } from \"react-native\";\r\nimport DatePicker from \"react-native-datepicker\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\nexport default class EditCalendar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      courseList: {\r\n        id: null,\r\n        name: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        submitted: false,\r\n      },\r\n      date: \"\",\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  onChangeDate = (text) => {\r\n    this.setState({\r\n      date: text,\r\n    });\r\n  };\r\n  onChangeName = (text) => {\r\n    this.setState({\r\n      name: text,\r\n    });\r\n  };\r\n\r\n  //ToDo id in die URL bekommen\r\n  handleSubmit() {\r\n    //id = this.props.route.params.course.id;\r\n    fetch(\r\n      \"http://192.168.178.23:9000/api/fitnessevent/\" +\r\n        this.props.route.params.id,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          date: this.state.date,\r\n          name: this.state.name,\r\n        }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    this.props.navigation.goBack(\"Fitnessplan\");\r\n    console.log(\"Edited\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Edit Screen</Text>\r\n\r\n        <DateTimePicker\r\n          //testID=\"dateTimePicker\"\r\n          value={new Date(2020, 9, 4)}\r\n          mode={\"date\"}\r\n          is24Hour={true}\r\n          display=\"default\"\r\n          onChange={(date) => {\r\n            this.setState({ date: date });\r\n          }}\r\n        />\r\n        <TextInput\r\n          style={{\r\n            height: 40,\r\n            borderColor: \"gray\",\r\n            borderWidth: 1,\r\n            width: 300,\r\n          }}\r\n          onChangeText={(text) => this.onChangeName(text)}\r\n          //value={value}\r\n        />\r\n        <Button title=\"Edit\" onPress={() => this.handleSubmit()}></Button>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Home;\r\n"]},"metadata":{},"sourceType":"module"}