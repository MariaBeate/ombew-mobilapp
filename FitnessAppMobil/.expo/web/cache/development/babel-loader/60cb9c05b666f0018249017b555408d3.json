{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ThemeContext from \"./screens/theme-context\";\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\nimport { NavigationActions, withNavigation } from \"react-navigation\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeUsername = function (text) {\n      _this.setState({\n        username: text\n      });\n    };\n\n    _this.onChangePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"navigateToScreen\",\n    value: function navigateToScreen() {\n      this.props.navigation.navigate(\"Home\");\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this2 = this;\n\n      fetch(\"http://192.168.0.176:9000/api/login\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        var token = response.token;\n\n        _this2.setState({\n          token: token\n        });\n\n        localStorage.setItem(\"token\", _this2.state.token);\n\n        if (token != null) {\n          _this2.setState({\n            isLoggedIn: true\n          });\n\n          console.log(\"Eingeloggt\");\n        } else {\n          console.log(\"Nicht geklappt\");\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      this.navigateToScreen();\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      localStorage.removeItem(\"token\");\n      this.setState({\n        isLoggedIn: false\n      });\n      console.log(\"Ausgeloggt\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoggedIn === false) {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          screenOptions: {\n            headerTitleAlign: \"center\",\n            headerStyle: {\n              backgroundColor: \"#621FF7\"\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            title: \"Home\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Fitnessplan\",\n          component: Fitnessplan,\n          options: {\n            title: \"Fitnessplan\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Fitnessinfo\",\n          component: Fitnessinfo,\n          options: {\n            title: \"Fitnessinfo\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          options: {\n            title: \"Login\"\n          },\n          initialParams: {\n            handleLogin: this.handleLogin.bind(this),\n            handleLogout: this.handleLogout.bind(this),\n            onChangeUsername: this.onChangeUsername.bind(this),\n            onChangePassword: this.onChangePassword.bind(this)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"AddCourse\",\n          component: AddCourse,\n          options: {\n            title: \"AddCourse\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"EditCourse\",\n          component: EditCourse,\n          options: {\n            title: \"EditCourse\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          screenOptions: {\n            headerTitleAlign: \"center\",\n            headerStyle: {\n              backgroundColor: \"#621FF7\"\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            title: \"Home\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Fitnessinfo\",\n          component: Fitnessinfo,\n          options: {\n            title: \"Fitnessinfo\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          options: {\n            title: \"Login\"\n          },\n          initialParams: {\n            handleLogin: this.handleLogin.bind(this),\n            handleLogout: this.handleLogout.bind(this),\n            onChangeUsername: this.onChangeUsername.bind(this),\n            onChangePassword: this.onChangePassword.bind(this)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"AddCourse\",\n          component: AddCourse,\n          options: {\n            title: \"AddCourse\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"EditCourse\",\n          component: EditCourse,\n          options: {\n            title: \"EditCourse\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","ThemeContext","Home","Fitnessplan","Fitnessinfo","Login","EditCourse","AddCourse","NavigationActions","withNavigation","Stack","App","props","onChangeUsername","text","setState","username","onChangePassword","password","state","token","isLoggedIn","Boolean","navigation","navigate","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","response","localStorage","setItem","console","log","catch","err","navigateToScreen","removeItem","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","handleLogin","bind","handleLogout"],"mappings":"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","sourcesContent":["// App.js\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Button, View, Text } from \"react-native\";\nimport ThemeContext from \"./screens/theme-context\";\n\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\n\nimport { NavigationActions, withNavigation } from \"react-navigation\";\n\n//import credentials from \"./screens/data/credentials.json\";\n\nconst Stack = createStackNavigator();\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    //this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean,\n    };\n  }\n\n  onChangeUsername = (text) => {\n    this.setState({\n      username: text,\n    });\n  };\n  onChangePassword = (text) => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  navigateToScreen() {\n    this.props.navigation.navigate(\"Home\");\n  }\n\n  handleLogin() {\n    //console.log(this.props.history);\n    fetch(\"http://192.168.0.176:9000/api/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        const token = response.token;\n        this.setState({\n          token: token,\n        });\n        localStorage.setItem(\"token\", this.state.token);\n        if (token != null) {\n          this.setState({\n            isLoggedIn: true,\n          });\n          //this.props.navigation.navigate(\"Fitnessinfo\");\n          // history.push(\"/FitnessInfoAdmin\");\n          console.log(\"Eingeloggt\");\n        } else {\n          console.log(\"Nicht geklappt\");\n        }\n      })\n\n      .catch((err) => console.log(err));\n    this.navigateToScreen();\n    //this.props.navigation.navigate(\"Home\");\n  }\n\n  handleLogout() {\n    localStorage.removeItem(\"token\");\n    this.setState({\n      isLoggedIn: false,\n    });\n    console.log(\"Ausgeloggt\");\n  }\n\n  render() {\n    if (this.state.isLoggedIn === false) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerTitleAlign: \"center\",\n              headerStyle: {\n                backgroundColor: \"#621FF7\",\n              },\n              headerTintColor: \"#fff\",\n              headerTitleStyle: {\n                fontWeight: \"bold\",\n              },\n            }}\n          >\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{\n                title: \"Home\",\n              }}\n            />\n            <Stack.Screen\n              name=\"Fitnessplan\"\n              component={Fitnessplan}\n              options={{ title: \"Fitnessplan\" }}\n            />\n            <Stack.Screen\n              name=\"Fitnessinfo\"\n              component={Fitnessinfo}\n              options={{ title: \"Fitnessinfo\" }}\n            />\n            <Stack.Screen\n              name=\"Login\"\n              component={Login}\n              options={{ title: \"Login\" }}\n              initialParams={{\n                handleLogin: this.handleLogin.bind(this),\n                handleLogout: this.handleLogout.bind(this),\n                onChangeUsername: this.onChangeUsername.bind(this),\n                onChangePassword: this.onChangePassword.bind(this),\n              }}\n            />\n            <Stack.Screen\n              name=\"AddCourse\"\n              component={AddCourse}\n              options={{ title: \"AddCourse\" }}\n            />\n            <Stack.Screen\n              name=\"EditCourse\"\n              component={EditCourse}\n              options={{ title: \"EditCourse\" }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    } else {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerTitleAlign: \"center\",\n              headerStyle: {\n                backgroundColor: \"#621FF7\",\n              },\n              headerTintColor: \"#fff\",\n              headerTitleStyle: {\n                fontWeight: \"bold\",\n              },\n            }}\n          >\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{\n                title: \"Home\",\n              }}\n            />\n\n            <Stack.Screen\n              name=\"Fitnessinfo\"\n              component={Fitnessinfo}\n              options={{ title: \"Fitnessinfo\" }}\n            />\n            <Stack.Screen\n              name=\"Login\"\n              component={Login}\n              options={{ title: \"Login\" }}\n              initialParams={{\n                handleLogin: this.handleLogin.bind(this),\n                handleLogout: this.handleLogout.bind(this),\n                onChangeUsername: this.onChangeUsername.bind(this),\n                onChangePassword: this.onChangePassword.bind(this),\n              }}\n            />\n            <Stack.Screen\n              name=\"AddCourse\"\n              component={AddCourse}\n              options={{ title: \"AddCourse\" }}\n            />\n            <Stack.Screen\n              name=\"EditCourse\"\n              component={EditCourse}\n              options={{ title: \"EditCourse\" }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}