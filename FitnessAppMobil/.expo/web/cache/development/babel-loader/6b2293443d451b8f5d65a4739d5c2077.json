{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\node_modules\\\\react-native-data-table\\\\src\\\\HeaderCell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nexport function HeaderCell(props) {\n  var style = props.style,\n      textStyle = props.textStyle,\n      width = props.width,\n      onPress = props.onPress,\n      text = props.text,\n      isSelected = props.isSelected,\n      isAscending = props.isAscending,\n      containerProps = _objectWithoutProperties(props, [\"style\", \"textStyle\", \"width\", \"onPress\", \"text\", \"isSelected\", \"isAscending\"]);\n\n  function renderSortArrow() {\n    if (isSelected) {\n      if (isAscending) return React.createElement(Icon, {\n        name: \"sort-asc\",\n        size: 16,\n        style: defaultStyles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 31\n        }\n      });\n      return React.createElement(Icon, {\n        name: \"sort-desc\",\n        size: 16,\n        style: defaultStyles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return React.createElement(Icon, {\n      name: \"sort\",\n      size: 16,\n      style: defaultStyles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (typeof onPress === 'function') {\n    return React.createElement(TouchableOpacity, _extends({}, containerProps, {\n      style: [defaultStyles.headerCell, style, {\n        flex: width\n      }],\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), React.createElement(Text, {\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, text), renderSortArrow());\n  }\n\n  return React.createElement(View, _extends({}, containerProps, {\n    style: [defaultStyles.headerCell, style, {\n      flex: width\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, text));\n}\nHeaderCell.propTypes = {\n  isSelected: PropTypes.bool,\n  isAscending: PropTypes.bool,\n  style: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  width: PropTypes.number,\n  onPress: PropTypes.func,\n  text: PropTypes.string\n};\nHeaderCell.defaultProps = {\n  width: 1\n};\nvar defaultStyles = StyleSheet.create({\n  headerCell: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  icon: {\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/node_modules/react-native-data-table/src/HeaderCell.js"],"names":["React","PropTypes","Icon","HeaderCell","props","style","textStyle","width","onPress","text","isSelected","isAscending","containerProps","renderSortArrow","defaultStyles","icon","headerCell","flex","propTypes","bool","ViewPropTypes","Text","number","func","string","defaultProps","StyleSheet","create","flexDirection","alignItems","justifyContent","marginRight"],"mappings":"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","sourcesContent":["/* @flow weak */\n\n/**\n * mSupply Mobile\n * Sustainable Solutions (NZ) Ltd. 2016\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ViewPropTypes,\n  TouchableOpacity,\n} from 'react-native';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\n/**\n * Renders a headerCell that supports being a plain View with Text or being a TouchableOpacity (with\n * callback). In the latter case Sort arrows will be rendered and controlled with isSelected and\n * isAscending props.\n * @param   {object}  props         Properties passed where component was created.\n * @prop    {boolean} isSelected    When false up+down sort arrows renderHeader, otherwise as below\n * @prop    {boolean} isAscending   Sort arrow up if true, down if false.\n * @prop    {StyleSheet} style      Style of the headerCell (View props)\n * @prop    {StyleSheet} textStyle  Style of the text in the HeaderCell\n * @prop    {number} width          flexbox flex property, gives weight to the headerCell width\n * @prop    {func} onPress          CallBack (should change sort order in parent)\n * @prop    {string}  text          Text to render in headerCell\n * @return  {React.Component}       Return TouchableOpacity with sort arrows if onPress is given a\n *                                  function. Otherwise return a View.\n */\n\nexport function HeaderCell(props) {\n  const {\n    style,\n    textStyle,\n    width,\n    onPress,\n    text,\n    isSelected,\n    isAscending,\n    ...containerProps\n  } = props;\n\n  function renderSortArrow() {\n    if (isSelected) {\n      // isAscending = true = a to z\n      if (isAscending) return <Icon name=\"sort-asc\" size={16} style={defaultStyles.icon} />;\n      return <Icon name=\"sort-desc\" size={16} style={defaultStyles.icon} />;\n    }\n    return <Icon name=\"sort\" size={16} style={defaultStyles.icon} />;\n  }\n\n  if (typeof onPress === 'function') {\n    return (\n      <TouchableOpacity\n        {...containerProps}\n        style={[defaultStyles.headerCell, style, { flex: width }]}\n        onPress={onPress}\n      >\n        <Text style={textStyle}>\n          {text}\n        </Text>\n        {renderSortArrow()}\n      </TouchableOpacity>\n    );\n  }\n  return (\n    <View {...containerProps} style={[defaultStyles.headerCell, style, { flex: width }]}>\n      <Text style={textStyle}>\n        {text}\n      </Text>\n    </View>\n  );\n}\n\nHeaderCell.propTypes = {\n  isSelected: PropTypes.bool,\n  isAscending: PropTypes.bool,\n  style: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  width: PropTypes.number,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n};\n\nHeaderCell.defaultProps = {\n  width: 1,\n};\n\nconst defaultStyles = StyleSheet.create({\n  headerCell: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  icon: {\n    marginRight: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}