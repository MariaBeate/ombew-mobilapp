{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\App.js\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport credentials from \"../data/credentials.json\";\nvar Stack = createStackNavigator();\n\nfunction handleLogin() {\n  var _this = this;\n\n  fetch(\"http://localhost:9000/api/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: this.state.username,\n      password: this.state.password\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (response) {\n    var token = response.token;\n\n    _this.setState({\n      token: token\n    });\n\n    localStorage.setItem(\"token\", _this.state.token);\n    if (token != null) _this.setState({\n      isLoggedIn: true\n    });\n    console.log(\"Eingeloggt\");\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nfunction handleLogout() {\n  localStorage.removeItem(\"token\");\n  this.setState({\n    isLoggedIn: false\n  });\n  console.log(\"Ausgeloggt\");\n}\n\nfunction NavStack(navigation) {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: \"center\",\n      headerStyle: {\n        backgroundColor: \"#621FF7\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      title: \"Home\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Fitnessplan\",\n    component: Fitnessplan,\n    options: {\n      title: \"Fitnessplan\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Fitnessinfo\",\n    component: Fitnessinfo,\n    options: {\n      title: \"Fitnessinfo\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    options: {\n      title: \"Login\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App(navigation) {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(NavStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/App.js"],"names":["React","NavigationContainer","createStackNavigator","Home","Fitnessplan","Fitnessinfo","Login","credentials","Stack","handleLogin","fetch","method","headers","Accept","body","JSON","stringify","username","state","password","then","res","json","response","token","setState","localStorage","setItem","isLoggedIn","console","log","catch","err","handleLogout","removeItem","NavStack","navigation","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","App"],"mappings":"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","sourcesContent":["// App.js\n\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Button, View, Text } from \"react-native\";\n\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\n\nimport credentials from \"../data/credentials.json\";\n\nconst Stack = createStackNavigator();\n\nfunction handleLogin() {\n  //console.log(this.props.history);\n  fetch(\"http://localhost:9000/api/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username: this.state.username,\n      password: this.state.password,\n    }),\n  })\n    .then((res) => res.json())\n    .then((response) => {\n      const token = response.token;\n      this.setState({\n        token: token,\n      });\n      localStorage.setItem(\"token\", this.state.token);\n      if (token != null)\n        this.setState({\n          isLoggedIn: true,\n        });\n      // history.push(\"/FitnessInfoAdmin\");\n      console.log(\"Eingeloggt\");\n    })\n\n    .catch((err) => console.log(err));\n}\n\nfunction handleLogout() {\n  localStorage.removeItem(\"token\");\n  this.setState({\n    isLoggedIn: false,\n  });\n  console.log(\"Ausgeloggt\");\n}\nfunction NavStack(navigation) {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerTitleAlign: \"center\",\n        headerStyle: {\n          backgroundColor: \"#621FF7\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          title: \"Home\",\n        }}\n      />\n      <Stack.Screen\n        name=\"Fitnessplan\"\n        component={Fitnessplan}\n        options={{ title: \"Fitnessplan\" }}\n      />\n      <Stack.Screen\n        name=\"Fitnessinfo\"\n        component={Fitnessinfo}\n        options={{ title: \"Fitnessinfo\" }}\n      />\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ title: \"Login\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App(navigation) {\n  return (\n    <NavigationContainer>\n      <NavStack />\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}