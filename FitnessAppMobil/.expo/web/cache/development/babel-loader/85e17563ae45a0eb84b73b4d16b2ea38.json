{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\node_modules\\\\react-native-data-table\\\\src\\\\Row.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport var Row = function (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  var _super = _createSuper(Row);\n\n  function Row(props) {\n    var _this;\n\n    _classCallCheck(this, Row);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isExpanded: props.isExpanded\n    };\n    _this.onPress = _this.onPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.isExpanded !== this.state.isExpanded) {\n        this.setState({\n          isExpanded: nextProps.isExpanded\n        });\n      }\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress() {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      });\n      this.props.onPress();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          expandedRowStyle = _this$props.expandedRowStyle,\n          children = _this$props.children,\n          renderExpansion = _this$props.renderExpansion,\n          onPress = _this$props.onPress,\n          touchableOpacityProps = _objectWithoutProperties(_this$props, [\"style\", \"expandedRowStyle\", \"children\", \"renderExpansion\", \"onPress\"]);\n\n      var rowStyle = this.state.isExpanded && expandedRowStyle ? expandedRowStyle : style;\n\n      if (renderExpansion) {\n        return React.createElement(TouchableOpacity, _extends({}, touchableOpacityProps, {\n          style: [defaultStyles.row, rowStyle],\n          onPress: this.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        }), React.createElement(View, {\n          style: defaultStyles.cellContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, children), this.state.isExpanded && renderExpansion());\n      }\n\n      if (onPress) {\n        return React.createElement(TouchableOpacity, _extends({}, touchableOpacityProps, {\n          style: [defaultStyles.row, {\n            flexDirection: 'row'\n          }, rowStyle],\n          onPress: this.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }\n        }), children);\n      }\n\n      return React.createElement(View, {\n        style: [defaultStyles.row, {\n          flexDirection: 'row'\n        }, rowStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return Row;\n}(React.Component);\nRow.propTypes = {\n  style: ViewPropTypes.style,\n  children: PropTypes.any,\n  onPress: PropTypes.func,\n  isExpanded: PropTypes.bool,\n  renderExpansion: PropTypes.func\n};\nvar defaultStyles = StyleSheet.create({\n  row: {\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    justifyContent: 'flex-start',\n    alignItems: 'stretch',\n    backgroundColor: '#d6f3ff'\n  },\n  cellContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/node_modules/react-native-data-table/src/Row.js"],"names":["React","PropTypes","Row","props","state","isExpanded","onPress","bind","nextProps","setState","style","expandedRowStyle","children","renderExpansion","touchableOpacityProps","rowStyle","defaultStyles","row","cellContainer","flexDirection","Component","propTypes","ViewPropTypes","any","func","bool","StyleSheet","create","flexWrap","justifyContent","alignItems","backgroundColor","flex"],"mappings":"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","sourcesContent":["/* @flow weak */\n\n/**\n * mSupply Mobile\n * Sustainable Solutions (NZ) Ltd. 2016\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  ViewPropTypes,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\n\nexport class Row extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: props.isExpanded,\n    };\n    this.onPress = this.onPress.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isExpanded !== this.state.isExpanded) {\n      this.setState({ isExpanded: nextProps.isExpanded });\n    }\n  }\n\n  onPress() {\n    this.setState({ isExpanded: !this.state.isExpanded });\n    this.props.onPress();\n  }\n\n  render() {\n    const { style, expandedRowStyle, children, renderExpansion, onPress, ...touchableOpacityProps } = this.props;\n    const rowStyle = this.state.isExpanded && expandedRowStyle ? expandedRowStyle : style;\n    if (renderExpansion) {\n      return (\n        <TouchableOpacity\n          {...touchableOpacityProps}\n          style={[defaultStyles.row, rowStyle]}\n          onPress={this.onPress}\n        >\n          <View style={defaultStyles.cellContainer}>\n            {children}\n          </View>\n          {this.state.isExpanded && renderExpansion()}\n        </TouchableOpacity>\n      );\n    }\n    if (onPress) {\n      return (\n        <TouchableOpacity\n          {...touchableOpacityProps}\n          style={[defaultStyles.row, { flexDirection: 'row' }, rowStyle]}\n          onPress={this.onPress}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n    return (\n      <View style={[defaultStyles.row, { flexDirection: 'row' }, rowStyle]}>\n        {children}\n      </View>\n    );\n  }\n}\n\nRow.propTypes = {\n  style: ViewPropTypes.style,\n  children: PropTypes.any,\n  onPress: PropTypes.func,\n  isExpanded: PropTypes.bool,\n  renderExpansion: PropTypes.func,\n};\n\nconst defaultStyles = StyleSheet.create({\n  row: {\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    justifyContent: 'flex-start',\n    alignItems: 'stretch',\n    backgroundColor: '#d6f3ff',\n  },\n  cellContainer: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}