{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { LocaleConfig } from \"react-native-calendars\";\n\nvar Fitnessplan = function (_Component) {\n  _inherits(Fitnessplan, _Component);\n\n  var _super = _createSuper(Fitnessplan);\n\n  function Fitnessplan(props) {\n    var _this;\n\n    _classCallCheck(this, Fitnessplan);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Fitnessplan, [{\n    key: \"render\",\n    value: function render() {\n      LocaleConfig.locales[\"fr\"] = {\n        monthNames: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n        monthNamesShort: [\"Janv.\", \"Févr.\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juil.\", \"Août\", \"Sept.\", \"Oct.\", \"Nov.\", \"Déc.\"],\n        dayNames: [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n        dayNamesShort: [\"Dim.\", \"Lun.\", \"Mar.\", \"Mer.\", \"Jeu.\", \"Ven.\", \"Sam.\"],\n        today: \"Aujourd'hui\"\n      };\n      LocaleConfig.defaultLocale = \"fr\";\n      return React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(Calendar, {\n        current: \"2012-03-01\",\n        minDate: \"2012-05-10\",\n        maxDate: \"2012-05-30\",\n        onDayPress: function onDayPress(day) {\n          console.log(\"selected day\", day);\n        },\n        monthFormat: \"yyyy MM\",\n        onMonthChange: function onMonthChange(month) {\n          console.log(\"month changed\", month);\n        },\n        hideArrows: true,\n        hideExtraDays: true,\n        disableMonthChange: true,\n        firstDay: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Fitnessplan;\n}(Component);\n\nexport default Fitnessplan;","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","Component","Calendar","CalendarList","Agenda","LocaleConfig","Fitnessplan","props","state","locales","monthNames","monthNamesShort","dayNames","dayNamesShort","today","defaultLocale","paddingTop","flex","day","console","log","month"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,QAA+C,wBAA/C;AACA,SAASC,YAAT,QAA6B,wBAA7B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,EAAb;AAHiB;AAUlB;;;;6BAEQ;AACPH,MAAAA,YAAY,CAACI,OAAb,CAAqB,IAArB,IAA6B;AAC3BC,QAAAA,UAAU,EAAE,CACV,SADU,EAEV,SAFU,EAGV,MAHU,EAIV,OAJU,EAKV,KALU,EAMV,MANU,EAOV,SAPU,EAQV,MARU,EASV,WATU,EAUV,SAVU,EAWV,UAXU,EAYV,UAZU,CADe;AAe3BC,QAAAA,eAAe,EAAE,CACf,OADe,EAEf,OAFe,EAGf,MAHe,EAIf,OAJe,EAKf,KALe,EAMf,MANe,EAOf,OAPe,EAQf,MARe,EASf,OATe,EAUf,MAVe,EAWf,MAXe,EAYf,MAZe,CAfU;AA6B3BC,QAAAA,QAAQ,EAAE,CACR,UADQ,EAER,OAFQ,EAGR,OAHQ,EAIR,UAJQ,EAKR,OALQ,EAMR,UANQ,EAOR,QAPQ,CA7BiB;AAsC3BC,QAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAtCY;AAuC3BC,QAAAA,KAAK,EAAE;AAvCoB,OAA7B;AAyCAT,MAAAA,YAAY,CAACU,aAAb,GAA6B,IAA7B;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAEE,QAAA,OAAO,EAAE,YAFX;AAIE,QAAA,OAAO,EAAE,YAJX;AAME,QAAA,OAAO,EAAE,YANX;AAQE,QAAA,UAAU,EAAE,oBAACC,GAAD,EAAS;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AACD,SAVH;AAYE,QAAA,WAAW,EAAE,SAZf;AAcE,QAAA,aAAa,EAAE,uBAACG,KAAD,EAAW;AACxBF,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,KAA7B;AACD,SAhBH;AAkBE,QAAA,UAAU,EAAE,IAlBd;AAoBE,QAAA,aAAa,EAAE,IApBjB;AAuBE,QAAA,kBAAkB,EAAE,IAvBtB;AAyBE,QAAA,QAAQ,EAAE,CAzBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA+BD;;;;EAvFuBpB,S;;AA0F1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, View, Text } from \"react-native\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { LocaleConfig } from \"react-native-calendars\";\r\n\r\nclass Fitnessplan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      /*day: 1, // day of month (1-31)\r\n      month: 1, // month of year (1-12)\r\n      year: 2017, // year\r\n      timestamp, // UTC timestamp representing 00:00 AM of this date\r\n      dateString: \"2016-05-13\", // date formatted as 'YYYY-MM-DD' string*/\r\n    };\r\n  }\r\n\r\n  render() {\r\n    LocaleConfig.locales[\"fr\"] = {\r\n      monthNames: [\r\n        \"Janvier\",\r\n        \"Février\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juillet\",\r\n        \"Août\",\r\n        \"Septembre\",\r\n        \"Octobre\",\r\n        \"Novembre\",\r\n        \"Décembre\",\r\n      ],\r\n      monthNamesShort: [\r\n        \"Janv.\",\r\n        \"Févr.\",\r\n        \"Mars\",\r\n        \"Avril\",\r\n        \"Mai\",\r\n        \"Juin\",\r\n        \"Juil.\",\r\n        \"Août\",\r\n        \"Sept.\",\r\n        \"Oct.\",\r\n        \"Nov.\",\r\n        \"Déc.\",\r\n      ],\r\n      dayNames: [\r\n        \"Dimanche\",\r\n        \"Lundi\",\r\n        \"Mardi\",\r\n        \"Mercredi\",\r\n        \"Jeudi\",\r\n        \"Vendredi\",\r\n        \"Samedi\",\r\n      ],\r\n      dayNamesShort: [\"Dim.\", \"Lun.\", \"Mar.\", \"Mer.\", \"Jeu.\", \"Ven.\", \"Sam.\"],\r\n      today: \"Aujourd'hui\",\r\n    };\r\n    LocaleConfig.defaultLocale = \"fr\";\r\n    return (\r\n      <View style={{ paddingTop: 50, flex: 1 }}>\r\n        <Calendar\r\n          // Initially visible month. Default = Date()\r\n          current={\"2012-03-01\"}\r\n          // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n          minDate={\"2012-05-10\"}\r\n          // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n          maxDate={\"2012-05-30\"}\r\n          // Handler which gets executed on day press. Default = undefined\r\n          onDayPress={(day) => {\r\n            console.log(\"selected day\", day);\r\n          }}\r\n          // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n          monthFormat={\"yyyy MM\"}\r\n          // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n          onMonthChange={(month) => {\r\n            console.log(\"month changed\", month);\r\n          }}\r\n          // Hide month navigation arrows. Default = false\r\n          hideArrows={true}\r\n          // Do not show days of other months in month page. Default = false\r\n          hideExtraDays={true}\r\n          // If hideArrows=false and hideExtraDays=false do not swich month when tapping on greyed out\r\n          // day from another month that is visible in calendar page. Default = false\r\n          disableMonthChange={true}\r\n          // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n          firstDay={1}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fitnessplan;\r\n"]},"metadata":{},"sourceType":"module"}