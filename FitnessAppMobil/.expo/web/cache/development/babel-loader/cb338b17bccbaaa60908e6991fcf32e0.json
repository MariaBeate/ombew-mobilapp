{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Agenda } from \"react-native-calendars\";\nimport { SearchBar } from \"react-native-elements\";\nimport filter from \"lodash\";\n\nvar Fitnessplan = function (_Component) {\n  _inherits(Fitnessplan, _Component);\n\n  var _super = _createSuper(Fitnessplan);\n\n  function Fitnessplan(props) {\n    var _this;\n\n    _classCallCheck(this, Fitnessplan);\n\n    _this = _super.call(this, props);\n\n    _this.updateSearch = function (text) {\n      _this.setState({\n        search: text\n      });\n    };\n\n    _this.handleSearch = function (text) {\n      if (text) {\n        var newData = _this.state.events.filter(function (item) {\n          var itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\n          var textData = text.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        });\n\n        _this.setState({\n          events: newData,\n          search: text\n        });\n\n        var eventsFormatted = {};\n\n        if (_this.state.events.length) {\n          _this.state.events.map(function (event) {\n            var day = event.date;\n\n            if (eventsFormatted[day]) {\n              eventsFormatted[day].push(event);\n            } else {\n              eventsFormatted[day] = [event];\n            }\n          });\n\n          _this.setState({\n            eventsFormatted: eventsFormatted\n          });\n        }\n      } else {\n        _this.setState({\n          search: \"\"\n        });\n\n        _this.loadEvents();\n      }\n    };\n\n    _this.loadEvents = function (day) {\n      if (!_this.props.route.params.en) {\n        fetch(\"http://192.168.178.23:9000/api/fitnessevents\").then(function (response) {\n          return response.json();\n        }).then(function (events) {\n          return events;\n        }).then(function (events) {\n          _this.setState({\n            events: events\n          });\n\n          var eventsFormatted = {};\n\n          if (events.length) {\n            events.map(function (event) {\n              var day = event.date;\n\n              if (eventsFormatted[day]) {\n                eventsFormatted[day].push(event);\n              } else {\n                eventsFormatted[day] = [event];\n              }\n            });\n\n            _this.setState({\n              eventsFormatted: eventsFormatted\n            });\n          }\n        });\n      } else {\n        if (!_this.props.route.params.en) {\n          fetch(\"http://192.168.178.23:9000/api/fitnessevents/en\").then(function (response) {\n            return response.json();\n          }).then(function (events) {\n            return events;\n          }).then(function (events) {\n            _this.setState({\n              events: events\n            });\n\n            var eventsFormatted = {};\n\n            if (events.length) {\n              events.map(function (event) {\n                var day = event.date;\n\n                if (eventsFormatted[day]) {\n                  eventsFormatted[day].push(event);\n                } else {\n                  eventsFormatted[day] = [event];\n                }\n              });\n\n              _this.setState({\n                eventsFormatted: eventsFormatted\n              });\n            }\n          });\n        }\n      }\n    };\n\n    _this.loadEvents = _this.loadEvents.bind(_assertThisInitialized(_this));\n    _this.state = {\n      events: [],\n      eventsFormatted: {},\n      search: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Fitnessplan, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadEvents();\n      this.focusListener = this.props.navigation.addListener(\"focus\", function () {\n        return _this2.loadEvents();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusListener();\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n\n      if (!this.props.route.params.en) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"white\",\n            paddingBottom: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            borderWidth: 1\n          },\n          placeholder: \"Nach Kurs suchen...\",\n          autoCorrect: false,\n          onChangeText: function onChangeText(text) {\n            _this3.handleSearch(text);\n          },\n          value: this.state.search,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }\n        }), React.createElement(Agenda, {\n          items: eventsFormatted,\n          loadItemsForMonth: this.loadEvents,\n          renderItem: this.renderItem.bind(this),\n          renderEmptyData: function renderEmptyData() {\n            return null;\n          },\n          renderEmptyDate: this.renderEmptyDate.bind(this),\n          onDayPress: function onDayPress(day) {\n            console.log(\"day pressed\");\n          },\n          events: this.state.eventsFormatted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"white\",\n            paddingBottom: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            borderWidth: 1\n          },\n          placeholder: \"Search for a course...\",\n          autoCorrect: false,\n          onChangeText: function onChangeText(text) {\n            _this3.handleSearch(text);\n          },\n          value: this.state.search,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }\n        }), React.createElement(Agenda, {\n          items: eventsFormatted,\n          loadItemsForMonth: this.loadEvents,\n          renderItem: this.renderItem.bind(this),\n          renderEmptyData: function renderEmptyData() {\n            return null;\n          },\n          renderEmptyDate: this.renderEmptyDate.bind(this),\n          onDayPress: function onDayPress(day) {\n            console.log(\"day pressed\");\n          },\n          events: this.state.eventsFormatted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Fitnessplan;\n}(Component);\n\nexport { Fitnessplan as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","Component","Agenda","SearchBar","filter","Fitnessplan","props","updateSearch","text","setState","search","handleSearch","newData","state","events","item","itemData","name","toUpperCase","textData","indexOf","eventsFormatted","length","map","event","day","date","push","loadEvents","route","params","en","fetch","then","response","json","bind","focusListener","navigation","addListener","flex","justifyContent","backgroundColor","paddingBottom","borderWidth","renderItem","renderEmptyDate","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Agenda } from \"react-native-calendars\";\r\nimport { SearchBar } from \"react-native-elements\";\r\nimport filter from \"lodash\";\r\n\r\nexport default class Fitnessplan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //this.filterCalendar = this.filterCalendar.bind(this);\r\n    // this.searchText = this.searchText.bind(this);\r\n\r\n    this.loadEvents = this.loadEvents.bind(this);\r\n    this.state = {\r\n      events: [],\r\n      eventsFormatted: {},\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.focusListener = this.props.navigation.addListener(\"focus\", () =>\r\n      this.loadEvents()\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.focusListener();\r\n  }\r\n  updateSearch = (text) => {\r\n    this.setState({\r\n      search: text,\r\n    });\r\n  };\r\n  handleSearch = (text) => {\r\n    if (text) {\r\n      const newData = this.state.events.filter(function (item) {\r\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      this.setState({\r\n        events: newData,\r\n        search: text,\r\n      });\r\n      var eventsFormatted = {};\r\n      if (this.state.events.length) {\r\n        this.state.events.map((event) => {\r\n          let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n\r\n          if (eventsFormatted[day]) {\r\n            eventsFormatted[day].push(event);\r\n          } else {\r\n            eventsFormatted[day] = [event];\r\n          }\r\n        });\r\n        this.setState({\r\n          eventsFormatted: eventsFormatted,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ search: \"\" });\r\n      this.loadEvents();\r\n    }\r\n  };\r\n\r\n  loadEvents = (day) => {\r\n    if (!this.props.route.params.en) {\r\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents\")\r\n        .then((response) => response.json())\r\n        .then((events) => {\r\n          // console.log(`events: ${JSON.stringify(events)}`);\r\n          return events;\r\n        })\r\n        .then((events) => {\r\n          this.setState({ events: events });\r\n          var eventsFormatted = {};\r\n          if (events.length) {\r\n            events.map((event) => {\r\n              let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n\r\n              if (eventsFormatted[day]) {\r\n                eventsFormatted[day].push(event);\r\n              } else {\r\n                eventsFormatted[day] = [event];\r\n              }\r\n            });\r\n            this.setState({\r\n              eventsFormatted: eventsFormatted,\r\n            });\r\n            // console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n            // console.log(this.state.events);\r\n          }\r\n        });\r\n    } else {\r\n      if (!this.props.route.params.en) {\r\n        fetch(\"http://192.168.178.23:9000/api/fitnessevents/en\")\r\n          .then((response) => response.json())\r\n          .then((events) => {\r\n            // console.log(`events: ${JSON.stringify(events)}`);\r\n            return events;\r\n          })\r\n          .then((events) => {\r\n            this.setState({ events: events });\r\n            var eventsFormatted = {};\r\n            if (events.length) {\r\n              events.map((event) => {\r\n                let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n\r\n                if (eventsFormatted[day]) {\r\n                  eventsFormatted[day].push(event);\r\n                } else {\r\n                  eventsFormatted[day] = [event];\r\n                }\r\n              });\r\n              this.setState({\r\n                eventsFormatted: eventsFormatted,\r\n              });\r\n              // console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n              // console.log(this.state.events);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n        <Text>{item.name}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  /*renderDay(day) {\r\n    return (\r\n      <View>\r\n        <Text>{item.day}</Text>\r\n      </View>\r\n    );\r\n  }*/\r\n\r\n  render() {\r\n    const eventsFormatted = this.state.eventsFormatted;\r\n\r\n    if (!this.props.route.params.en) {\r\n      return (\r\n        <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n          <TextInput\r\n            style={{ borderWidth: 1 }}\r\n            placeholder=\"Nach Kurs suchen...\"\r\n            autoCorrect={false}\r\n            onChangeText={(text) => {\r\n              this.handleSearch(text);\r\n            }}\r\n            value={this.state.search}\r\n          />\r\n\r\n          <Agenda\r\n            //style={styles.calendar}\r\n            //selected={\"2020-09-04\"}\r\n            items={eventsFormatted}\r\n            loadItemsForMonth={this.loadEvents}\r\n            renderItem={this.renderItem.bind(this)}\r\n            //renderDay={this.renderDay.bind(this)}\r\n            renderEmptyData={() => null}\r\n            renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n            onDayPress={(day) => {\r\n              console.log(\"day pressed\");\r\n            }}\r\n            //loadEvents={(day) => this.loadEvents(day)}\r\n            events={this.state.eventsFormatted}\r\n            /*onPressEvent={(event) =>\r\n            this.props.navigation.navigate(\"Login\", { event })\r\n          }*/\r\n          />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n          <TextInput\r\n            style={{ borderWidth: 1 }}\r\n            placeholder=\"Search for a course...\"\r\n            autoCorrect={false}\r\n            onChangeText={(text) => {\r\n              this.handleSearch(text);\r\n            }}\r\n            value={this.state.search}\r\n          />\r\n\r\n          <Agenda\r\n            //style={styles.calendar}\r\n            //selected={\"2020-09-04\"}\r\n            items={eventsFormatted}\r\n            loadItemsForMonth={this.loadEvents}\r\n            renderItem={this.renderItem.bind(this)}\r\n            //renderDay={this.renderDay.bind(this)}\r\n            renderEmptyData={() => null}\r\n            renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n            onDayPress={(day) => {\r\n              console.log(\"day pressed\");\r\n            }}\r\n            //loadEvents={(day) => this.loadEvents(day)}\r\n            events={this.state.eventsFormatted}\r\n            /*onPressEvent={(event) =>\r\n                  this.props.navigation.navigate(\"Login\", { event })\r\n                }*/\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}