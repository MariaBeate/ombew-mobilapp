{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\admin\\\\FitnessplanAdmin.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { SearchBar } from \"react-native-elements\";\n\nvar FitnessplanAdmin = function (_Component) {\n  _inherits(FitnessplanAdmin, _Component);\n\n  var _super = _createSuper(FitnessplanAdmin);\n\n  function FitnessplanAdmin(props) {\n    var _this;\n\n    _classCallCheck(this, FitnessplanAdmin);\n\n    _this = _super.call(this, props);\n\n    _this.updateSearch = function (text) {\n      _this.setState({\n        search: text\n      });\n    };\n\n    _this.filterCalendar = function () {\n      var events = _this.state.events;\n      var search = _this.state.search;\n\n      _this.setState({\n        events: events.filter(function (event) {\n          return event.name == search;\n        })\n      });\n\n      return _this.state.events;\n      console.log(_this.state.events);\n      console.log(_this.state.search);\n    };\n\n    _this.loadEvents = function (day) {\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents\").then(function (response) {\n        return response.json();\n      }).then(function (events) {\n        console.log(\"events: \" + JSON.stringify(events));\n        return events;\n      }).then(function (events) {\n        var eventsFormatted = {};\n\n        if (events.length) {\n          events.map(function (event) {\n            var day = event.date;\n\n            if (eventsFormatted[day]) {\n              eventsFormatted[day].push(event);\n            } else {\n              eventsFormatted[day] = [event];\n            }\n          });\n\n          _this.setState({\n            eventsFormatted: eventsFormatted\n          });\n\n          console.log(\"eventsFormatted: \" + JSON.stringify(eventsFormatted));\n        }\n      });\n    };\n\n    _this._deleteEvent = _this._deleteEvent.bind(_assertThisInitialized(_this));\n    _this.loadEvents = _this.loadEvents.bind(_assertThisInitialized(_this));\n    _this.state = {\n      events: [],\n      eventsFormatted: {},\n      search: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FitnessplanAdmin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadEvents();\n      this.focusListener = this.props.navigation.addListener(\"focus\", function () {\n        return _this2.loadEvents();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.focusListener();\n    }\n  }, {\n    key: \"_deleteEvent\",\n    value: function _deleteEvent(id) {\n      var _this3 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n      var events = this.state;\n      fetch(\"http://192.168.178.23:9000/api/fitnessevents/\" + id, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function () {\n        _this3.setState({\n          events: events.filter(function (event) {\n            return event.id !== id;\n          })\n        });\n\n        return;\n      }).catch(function (error) {\n        throw error;\n      });\n      this.forceUpdate();\n      console.log(\"Deleted\");\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, item.name), React.createElement(Button, {\n        title: \"Edit\",\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate(\"EditCalendar\", {\n            id: item.id,\n            name: item.name,\n            date: item.date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Delete\",\n        onPress: function onPress() {\n          return _this4._deleteEvent(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var eventsFormatted = this.state.eventsFormatted;\n      var search = this.state.search.search;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\",\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Add\",\n        onPress: function onPress() {\n          return _this5.props.navigation.navigate(\"AddToCalendar\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }), React.createElement(Agenda, {\n        selected: \"2020-09-04\",\n        items: eventsFormatted,\n        loadItemsForMonth: this.loadEvents,\n        renderItem: this.renderItem.bind(this),\n        renderEmptyData: function renderEmptyData() {\n          return null;\n        },\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        events: this.state.eventsFormatted,\n        onPressEvent: function onPressEvent(event) {\n          return _this5.props.navigation.navigate(\"Fitnessinfo\", {\n            event: event\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return FitnessplanAdmin;\n}(Component);\n\nexport { FitnessplanAdmin as default };\nvar styles = StyleSheet.create({\n  header: {\n    height: 60,\n    backgroundColor: \"orange\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  contentContainer: {\n    backgroundColor: \"purple\"\n  },\n  item: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"grey\",\n    alignItems: \"center\"\n  },\n  marginLeft: {\n    marginLeft: 5\n  },\n  menu: {\n    width: 20,\n    height: 2,\n    backgroundColor: \"#111\",\n    margin: 2,\n    borderRadius: 3\n  },\n  text: {\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginLeft: 10\n  },\n  text1: {\n    textAlign: \"left\",\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  text2: {\n    textAlign: \"center\",\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"blue\",\n    marginLeft: \"auto\"\n  },\n  text3: {\n    textAlign: \"right\",\n    marginVertical: 30,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"orange\",\n    marginLeft: \"auto\"\n  },\n  textInput: {\n    width: \"90%\",\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 30,\n    borderColor: \"gray\",\n    borderBottomWidth: 2,\n    fontSize: 16\n  },\n  modalView: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  touchableHighlight: {\n    backgroundColor: \"white\",\n    marginVertical: 10,\n    alignSelf: \"stretch\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/admin/FitnessplanAdmin.js"],"names":["React","Component","Calendar","CalendarList","Agenda","SearchBar","FitnessplanAdmin","props","updateSearch","text","setState","search","filterCalendar","events","state","filter","event","name","console","log","loadEvents","day","fetch","then","response","json","JSON","stringify","eventsFormatted","length","map","date","push","_deleteEvent","bind","focusListener","navigation","addListener","id","method","headers","Accept","catch","error","forceUpdate","item","navigate","flex","backgroundColor","paddingBottom","renderItem","renderEmptyDate","styles","StyleSheet","create","header","height","alignItems","justifyContent","headerText","fontSize","fontWeight","color","contentContainer","flexDirection","borderBottomWidth","borderBottomColor","marginLeft","menu","width","margin","borderRadius","marginVertical","text1","textAlign","text2","text3","textInput","marginRight","marginBottom","borderColor","modalView","touchableHighlight","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  FlatList,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n  Platform,\r\n  Text,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { SearchBar } from \"react-native-elements\";\r\n\r\nexport default class FitnessplanAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._deleteEvent = this._deleteEvent.bind(this);\r\n    this.loadEvents = this.loadEvents.bind(this);\r\n    this.state = {\r\n      events: [],\r\n      eventsFormatted: {},\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.focusListener = this.props.navigation.addListener(\"focus\", () =>\r\n      this.loadEvents()\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.focusListener();\r\n  }\r\n  updateSearch = (text) => {\r\n    this.setState({\r\n      search: text,\r\n    });\r\n  };\r\n  filterCalendar = () => {\r\n    const events = this.state.events;\r\n    const search = this.state.search;\r\n    this.setState({\r\n      events: events.filter((event) => event.name == search),\r\n    });\r\n    return this.state.events;\r\n    console.log(this.state.events);\r\n    console.log(this.state.search);\r\n  };\r\n\r\n  loadEvents = (day) => {\r\n    //Charge les items du mois\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents\")\r\n      .then((response) => response.json())\r\n      .then((events) => {\r\n        console.log(`events: ${JSON.stringify(events)}`);\r\n        return events;\r\n      })\r\n      .then((events) => {\r\n        var eventsFormatted = {};\r\n        if (events.length) {\r\n          events.map((event) => {\r\n            let day = event.date; //.toDate().toISOString().split(\"T\")[0]; // Format to YYYY-MM-DD\r\n            if (eventsFormatted[day]) {\r\n              eventsFormatted[day].push(event);\r\n            } else {\r\n              eventsFormatted[day] = [event];\r\n            }\r\n          });\r\n          this.setState({\r\n            eventsFormatted: eventsFormatted,\r\n          });\r\n          console.log(`eventsFormatted: ${JSON.stringify(eventsFormatted)}`);\r\n        }\r\n      });\r\n  };\r\n\r\n  //to do: delete by unique id\r\n  _deleteEvent(id) {\r\n    const { eventsFormatted } = this.state;\r\n    const events = this.state;\r\n    fetch(\"http://192.168.178.23:9000/api/fitnessevents/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          events: events.filter((event) => event.id !== id),\r\n          // eventsFormatted: eventsFormatted.ke\r\n        });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    this.forceUpdate();\r\n    console.log(\"Deleted\");\r\n  }\r\n\r\n  renderItem(item) {\r\n    // console.log(item.name);\r\n    return (\r\n      <View>\r\n        <Text>{item.name}</Text>\r\n        <Button\r\n          title=\"Edit\"\r\n          onPress={() =>\r\n            this.props.navigation.navigate(\"EditCalendar\", {\r\n              id: item.id,\r\n              name: item.name,\r\n              date: item.date,\r\n            })\r\n          }\r\n        ></Button>\r\n        <Button\r\n          title=\"Delete\"\r\n          onPress={() => this._deleteEvent(item.id)}\r\n        ></Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  /* renderDay() {\r\n    return (\r\n      <View>\r\n        <Button title=\"Add\"></Button>\r\n      </View>\r\n    );\r\n  }*/\r\n\r\n  render() {\r\n    const eventsFormatted = this.state.eventsFormatted;\r\n    const { search } = this.state.search;\r\n\r\n    return (\r\n      <View style={{ flex: 1, backgroundColor: \"white\", paddingBottom: 30 }}>\r\n        <Button\r\n          title=\"Add\"\r\n          onPress={() => this.props.navigation.navigate(\"AddToCalendar\")}\r\n        ></Button>\r\n        <Agenda\r\n          //style={styles.contentContainer}\r\n          selected={\"2020-09-04\"}\r\n          items={eventsFormatted}\r\n          loadItemsForMonth={this.loadEvents}\r\n          renderItem={this.renderItem.bind(this)}\r\n          // renderDay={this.renderDay.bind(this)}\r\n          renderEmptyData={() => null}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n          //loadEvents={(day) => this.loadEvents(day)}\r\n          events={this.state.eventsFormatted}\r\n          onPressEvent={(event) =>\r\n            this.props.navigation.navigate(\"Fitnessinfo\", { event })\r\n          }\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: 60,\r\n    backgroundColor: \"orange\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  contentContainer: {\r\n    backgroundColor: \"purple\",\r\n  },\r\n  item: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"grey\",\r\n    alignItems: \"center\",\r\n  },\r\n  marginLeft: {\r\n    marginLeft: 5,\r\n  },\r\n  menu: {\r\n    width: 20,\r\n    height: 2,\r\n    backgroundColor: \"#111\",\r\n    margin: 2,\r\n    borderRadius: 3,\r\n  },\r\n  text: {\r\n    marginVertical: 30,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 10,\r\n  },\r\n  text1: {\r\n    textAlign: \"left\",\r\n    marginVertical: 30,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    // marginLeft: \"auto\",\r\n  },\r\n  text2: {\r\n    textAlign: \"center\",\r\n    marginVertical: 30,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"blue\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  text3: {\r\n    textAlign: \"right\",\r\n    marginVertical: 30,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"orange\",\r\n    marginLeft: \"auto\",\r\n  },\r\n\r\n  textInput: {\r\n    width: \"90%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    marginBottom: 30,\r\n    borderColor: \"gray\",\r\n    borderBottomWidth: 2,\r\n    fontSize: 16,\r\n  },\r\n  modalView: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  touchableHighlight: {\r\n    backgroundColor: \"white\",\r\n    marginVertical: 10,\r\n    alignSelf: \"stretch\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n/*\r\n  <SearchBar\r\n          placeholder=\"Type Here...\"\r\n          onChangeText={(text) => {\r\n            this.updateSearch(text);\r\n          }}\r\n          value={search}\r\n        />\r\n         <Button title=\"Search\" onPress={() => this.filterCalendar()}></Button>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}