{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\node_modules\\\\react-native-data-table\\\\src\\\\Cell.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nexport function Cell(props) {\n  var style = props.style,\n      numberOfLines = props.numberOfLines,\n      textStyle = props.textStyle,\n      width = props.width,\n      children = props.children,\n      viewProps = _objectWithoutProperties(props, [\"style\", \"numberOfLines\", \"textStyle\", \"width\", \"children\"]);\n\n  if (typeof children === 'string' || typeof children === 'number') {\n    return React.createElement(View, _extends({}, viewProps, {\n      style: [defaultStyles.cell, style, {\n        flex: width\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }), React.createElement(Text, {\n      numberOfLines: numberOfLines,\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n  return React.createElement(View, _extends({}, viewProps, {\n    style: [defaultStyles.cell, style, {\n      flex: width\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), children);\n}\nCell.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  style: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  width: PropTypes.number,\n  children: PropTypes.any,\n  numberOfLines: PropTypes.number\n});\nCell.defaultProps = {\n  width: 1,\n  numberOfLines: 1\n};\nvar defaultStyles = StyleSheet.create({\n  cell: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/node_modules/react-native-data-table/src/Cell.js"],"names":["React","PropTypes","Cell","props","style","numberOfLines","textStyle","width","children","viewProps","defaultStyles","cell","flex","propTypes","ViewPropTypes","Text","number","any","defaultProps","StyleSheet","create","justifyContent"],"mappings":";;;;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAiBA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAClBC,KADkB,GACiDD,KADjD,CAClBC,KADkB;AAAA,MACXC,aADW,GACiDF,KADjD,CACXE,aADW;AAAA,MACIC,SADJ,GACiDH,KADjD,CACIG,SADJ;AAAA,MACeC,KADf,GACiDJ,KADjD,CACeI,KADf;AAAA,MACsBC,QADtB,GACiDL,KADjD,CACsBK,QADtB;AAAA,MACmCC,SADnC,4BACiDN,KADjD;;AAI1B,MAAI,OAAOK,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE,WACE,oBAAC,IAAD,eAAUC,SAAV;AAAqB,MAAA,KAAK,EAAE,CAACC,aAAa,CAACC,IAAf,EAAqBP,KAArB,EAA4B;AAAEQ,QAAAA,IAAI,EAAEL;AAAR,OAA5B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAEF,aAArB;AAAoC,MAAA,KAAK,EAAEC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,QADH,CADF,CADF;AAOD;;AAED,SACE,oBAAC,IAAD,eAAUC,SAAV;AAAqB,IAAA,KAAK,EAAE,CAACC,aAAa,CAACC,IAAf,EAAqBP,KAArB,EAA4B;AAAEQ,MAAAA,IAAI,EAAEL;AAAR,KAA5B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGC,QADH,CADF;AAKD;AAEDN,IAAI,CAACW,SAAL,mCACKC,aADL;AAEEV,EAAAA,KAAK,EAAEU,aAAa,CAACV,KAFvB;AAGEE,EAAAA,SAAS,EAAES,IAAI,CAACF,SAAL,CAAeT,KAH5B;AAIEG,EAAAA,KAAK,EAAEN,SAAS,CAACe,MAJnB;AAKER,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,GALtB;AAMEZ,EAAAA,aAAa,EAAEJ,SAAS,CAACe;AAN3B;AASAd,IAAI,CAACgB,YAAL,GAAoB;AAClBX,EAAAA,KAAK,EAAE,CADW;AAElBF,EAAAA,aAAa,EAAE;AAFG,CAApB;AAKA,IAAMK,aAAa,GAAGS,UAAU,CAACC,MAAX,CAAkB;AACtCT,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJS,IAAAA,cAAc,EAAE;AAFZ;AADgC,CAAlB,CAAtB","sourcesContent":["/* @flow weak */\n\n/**\n * mSupply Mobile\n * Sustainable Solutions (NZ) Ltd. 2016\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ViewPropTypes,\n} from 'react-native';\n\n/**\n * Renders a Cell that supports having a string as children, or any component.\n * @param   {object}  props         Properties passed where component was created.\n * @prop    {StyleSheet} style      Style of the Cell (View props)\n * @prop    {StyleSheet} textStyle  Style of the text in the Cell\n * @prop    {number} width          Flexbox flex property, gives weight to the Cell width\n * @prop    {string}  text          Text to render in Cell\n * @return  {React.Component}       A single View with children\n */\nexport function Cell(props) {\n  const { style, numberOfLines, textStyle, width, children, ...viewProps } = props;\n\n  // Render string child in a Text Component\n  if (typeof children === 'string' || typeof children === 'number') {\n    return (\n      <View {...viewProps} style={[defaultStyles.cell, style, { flex: width }]}>\n        <Text numberOfLines={numberOfLines} style={textStyle}>\n          {children}\n        </Text>\n      </View>\n    );\n  }\n  // Render any non-string child component(s)\n  return (\n    <View {...viewProps} style={[defaultStyles.cell, style, { flex: width }]}>\n      {children}\n    </View>\n  );\n}\n\nCell.propTypes = {\n  ...ViewPropTypes,\n  style: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  width: PropTypes.number,\n  children: PropTypes.any,\n  numberOfLines: PropTypes.number,\n};\n\nCell.defaultProps = {\n  width: 1,\n  numberOfLines: 1,\n};\n\nconst defaultStyles = StyleSheet.create({\n  cell: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}