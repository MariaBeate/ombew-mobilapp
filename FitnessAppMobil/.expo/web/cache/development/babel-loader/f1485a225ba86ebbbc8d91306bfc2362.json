{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\node_modules\\\\react-native-data-table\\\\src\\\\EditableCell.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nexport var EditableCell = function (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  var _super = _createSuper(EditableCell);\n\n  function EditableCell(props) {\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: 'N/A'\n    };\n    _this.componentWillMount = _this.componentWillMount.bind(_assertThisInitialized(_this));\n    _this.onEndEditing = _this.onEndEditing.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        value: String(this.props.value)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.value !== this.state.value) {\n        this.setState({\n          value: String(nextProps.value)\n        });\n      }\n    }\n  }, {\n    key: \"onEndEditing\",\n    value: function onEndEditing() {\n      var newValue = this.state.value === '' ? null : this.state.value;\n      this.props.onEndEditing(this.props.target, newValue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          width = _this$props.width,\n          textStyle = _this$props.textStyle,\n          refCallback = _this$props.refCallback,\n          textInputProps = _objectWithoutProperties(_this$props, [\"style\", \"width\", \"textStyle\", \"refCallback\"]);\n\n      return React.createElement(View, {\n        style: [defaultStyles.cell, style, {\n          flex: width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, _extends({}, textInputProps, {\n        ref: refCallback,\n        style: [defaultStyles.text, textStyle],\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            value: text\n          });\n        },\n        onEndEditing: this.onEndEditing,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);\nEditableCell.propTypes = {\n  style: ViewPropTypes.style,\n  refCallback: PropTypes.func,\n  textStyle: TextInput.propTypes.style,\n  width: PropTypes.number,\n  onEndEditing: PropTypes.func,\n  target: PropTypes.object,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEditableCell.defaultProps = {\n  width: 1,\n  value: 'N/A'\n};\nvar defaultStyles = StyleSheet.create({\n  cell: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  text: {\n    right: -9\n  }\n});","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/node_modules/react-native-data-table/src/EditableCell.js"],"names":["React","PropTypes","EditableCell","props","state","value","componentWillMount","bind","onEndEditing","setState","String","nextProps","newValue","target","style","width","textStyle","refCallback","textInputProps","defaultStyles","cell","flex","text","Component","propTypes","ViewPropTypes","func","TextInput","number","object","oneOfType","string","defaultProps","StyleSheet","create","justifyContent","right"],"mappings":"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","sourcesContent":["/* @flow weak */\n\n/**\n * mSupply Mobile\n * Sustainable Solutions (NZ) Ltd. 2016\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  ViewPropTypes,\n} from 'react-native';\n\nexport class EditableCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'N/A',\n    };\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.onEndEditing = this.onEndEditing.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      value: String(this.props.value),\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        value: String(nextProps.value),\n      });\n    }\n  }\n\n  onEndEditing() {\n    // If the field is cleared, write null to property\n    const newValue = this.state.value === '' ? null : this.state.value;\n    this.props.onEndEditing(this.props.target, newValue);\n  }\n\n  render() {\n    const { style, width, textStyle, refCallback, ...textInputProps } = this.props;\n    return (\n      <View style={[defaultStyles.cell, style, { flex: width }]}>\n        <TextInput\n          {...textInputProps}\n          ref={refCallback}\n          style={[defaultStyles.text, textStyle]}\n          onChangeText={(text) => this.setState({ value: text })}\n          onEndEditing={this.onEndEditing}\n          value={this.state.value}\n        />\n      </View>\n    );\n  }\n}\n\nEditableCell.propTypes = {\n  style: ViewPropTypes.style,\n  refCallback: PropTypes.func,\n  textStyle: TextInput.propTypes.style,\n  width: PropTypes.number,\n  onEndEditing: PropTypes.func,\n  target: PropTypes.object,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nEditableCell.defaultProps = {\n  width: 1,\n  value: 'N/A',\n};\n\nconst defaultStyles = StyleSheet.create({\n  cell: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  text: {\n    right: -9, // This is to account for RN issue 1287, see https://github.com/facebook/react-native/issues/1287\n  },\n});\n"]},"metadata":{},"sourceType":"module"}