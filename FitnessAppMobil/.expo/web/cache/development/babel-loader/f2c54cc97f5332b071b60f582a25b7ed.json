{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ThemeContext from \"./screens/theme-context\";\nimport { Button } from \"react-native-elements\";\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\nimport FitnessinfoAdmin from \"./screens/admin/FitnessinfoAdmin\";\nimport FitnessplanAdmin from \"./screens/admin/FitnessplanAdmin\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerTitleAlign: \"center\",\n          headerStyle: {\n            backgroundColor: \"#621FF7\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          title: \"Home\"\n        },\n        initialParams: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Fitnessplan\",\n        component: Fitnessplan,\n        options: {\n          title: \"Fitnessplan\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"FitnessplanAdmin\",\n        component: FitnessplanAdmin,\n        options: {\n          title: \"FitnessplanAdmin\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Fitnessinfo\",\n        component: Fitnessinfo,\n        options: {\n          title: \"Fitnessinfo\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"FitnessinfoAdmin\",\n        component: FitnessinfoAdmin,\n        options: {\n          title: \"FitnessinfoAdmin\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          title: \"Login\"\n        },\n        initialParams: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AddCourse\",\n        component: AddCourse,\n        options: {\n          title: \"AddCourse\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"EditCourse\",\n        component: EditCourse,\n        options: {\n          title: \"EditCourse\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","ThemeContext","Button","Home","Fitnessplan","Fitnessinfo","Login","EditCourse","AddCourse","FitnessinfoAdmin","FitnessplanAdmin","Stack","App","props","state","username","password","token","isLoggedIn","Boolean","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title"],"mappings":"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","sourcesContent":["// App.js\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { View, Text } from \"react-native\";\nimport ThemeContext from \"./screens/theme-context\";\nimport { Button } from \"react-native-elements\";\n\nimport Home from \"./screens/Home\";\nimport Fitnessplan from \"./screens/Fitnessplan\";\nimport Fitnessinfo from \"./screens/Fitnessinfo\";\nimport Login from \"./screens/Login\";\nimport EditCourse from \"./screens/admin/EditCourse\";\nimport AddCourse from \"./screens/admin/AddCourse\";\nimport FitnessinfoAdmin from \"./screens/admin/FitnessinfoAdmin\";\nimport FitnessplanAdmin from \"./screens/admin/FitnessplanAdmin\";\n\n//import credentials from \"./screens/data/credentials.json\";\n\nconst Stack = createStackNavigator();\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    //this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      isLoggedIn: Boolean,\n    };\n  }\n\n  /*onChangeUsername = (text) => {\n    this.setState({\n      username: text,\n    });\n  };\n  onChangePassword = (text) => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  handleLogin() {\n    //console.log(this.props.history);\n    fetch(\"http://192.168.178.23:9000/api/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        const token = response.token;\n        this.setState({\n          token: token,\n        });\n        localStorage.setItem(\"token\", this.state.token);\n        if (token != null) {\n          this.setState({\n            isLoggedIn: true,\n          });\n          console.log(\"Eingeloggt\");\n        } else {\n          console.log(\"Nicht geklappt\");\n        }\n      })\n\n      .catch((err) => console.log(err));\n  }\n\n  /*reloadHome() {\n    return this.state.isLoggedIn;\n  }\n\n  handleLogout() {\n    localStorage.removeItem(\"token\");\n    this.setState({\n      isLoggedIn: false,\n    });\n    console.log(\"Ausgeloggt\");\n  }*/\n\n  render() {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerTitleAlign: \"center\",\n            headerStyle: {\n              backgroundColor: \"#621FF7\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Home\",\n            }}\n            initialParams={\n              {\n                //isLoggedIn: this.state.isLoggedIn,\n                //reloadHome: this.reloadHome.bind(this),\n                //handleLogout: this.handleLogout.bind(this),\n                //navigation: this.props.navigation,\n              }\n            }\n          />\n          <Stack.Screen\n            name=\"Fitnessplan\"\n            component={Fitnessplan}\n            options={{ title: \"Fitnessplan\" }}\n          />\n          <Stack.Screen\n            name=\"FitnessplanAdmin\"\n            component={FitnessplanAdmin}\n            options={{ title: \"FitnessplanAdmin\" }}\n          />\n          <Stack.Screen\n            name=\"Fitnessinfo\"\n            component={Fitnessinfo}\n            options={{ title: \"Fitnessinfo\" }}\n          />\n          <Stack.Screen\n            name=\"FitnessinfoAdmin\"\n            component={FitnessinfoAdmin}\n            options={{ title: \"FitnessinfoAdmin\" }}\n          />\n          <Stack.Screen\n            name=\"Login\"\n            component={Login}\n            options={{ title: \"Login\" }}\n            initialParams={\n              {\n                //id: null,\n                //handleLogin: this.handleLogin.bind(this),\n                //handleLogout: this.handleLogout.bind(this),\n                //onChangeUsername: this.onChangeUsername.bind(this),\n                //onChangePassword: this.onChangePassword.bind(this),\n              }\n            }\n          />\n          <Stack.Screen\n            name=\"AddCourse\"\n            component={AddCourse}\n            options={{ title: \"AddCourse\" }}\n          />\n          <Stack.Screen\n            name=\"EditCourse\"\n            component={EditCourse}\n            options={{ title: \"EditCourse\" }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}