{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Desktop\\\\FitnessAppMobil\\\\screens\\\\Fitnessplan.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, Fragment } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Calendar } from \"react-native-calendars\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nvar testIDs = require(\"./testIDs\");\n\nvar Fitnessplan = function Fitnessplan() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var onDayPress = function onDayPress(day) {\n    setSelected(day.dateString);\n  };\n\n  var getDisabledDates = function getDisabledDates(startDate, endDate, daysToDisable) {\n    var disabledDates = {};\n    var start = moment(startDate);\n    var end = moment(endDate);\n\n    for (var m = moment(start); m.diff(end, \"days\") <= 0; m.add(1, \"days\")) {\n      if (_.includes(daysToDisable, m.weekday())) {\n        disabledDates[m.format(\"YYYY-MM-DD\")] = {\n          disabled: true\n        };\n      }\n    }\n\n    return disabledDates;\n  };\n\n  var renderCalendarWithSelectableDate = function renderCalendarWithSelectableDate() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Calendar with selectable date\"), React.createElement(Calendar, {\n      testID: testIDs.calendars.FIRST,\n      current: \"2020-02-02\",\n      style: styles.calendar,\n      hideExtraDays: true,\n      onDayPress: onDayPress,\n      markedDates: _defineProperty({}, selected, {\n        selected: true,\n        disableTouchEvent: true,\n        selectedColor: \"orange\",\n        selectedTextColor: \"red\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithWeekNumbers = function renderCalendarWithWeekNumbers() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Calendar with week numbers\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      hideExtraDays: true,\n      showWeekNumbers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMarkedDatesAndHiddenArrows = function renderCalendarWithMarkedDatesAndHiddenArrows() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Calendar with marked dates and hidden arrows\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: \"2012-05-16\",\n      minDate: \"2012-05-10\",\n      maxDate: \"2012-05-29\",\n      disableAllTouchEventsForDisabledDays: true,\n      firstDay: 1,\n      markedDates: {\n        \"2012-05-23\": {\n          selected: true,\n          marked: true,\n          disableTouchEvent: true\n        },\n        \"2012-05-24\": {\n          selected: true,\n          marked: true,\n          dotColor: \"red\"\n        },\n        \"2012-05-25\": {\n          marked: true,\n          dotColor: \"red\"\n        },\n        \"2012-05-26\": {\n          marked: true\n        },\n        \"2012-05-27\": {\n          disabled: true,\n          activeOpacity: 0,\n          disableTouchEvent: false\n        }\n      },\n      hideArrows: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithPeriodMarkingAndSpinner = function renderCalendarWithPeriodMarkingAndSpinner() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Calendar with period marking and spinner\"), React.createElement(Calendar, {\n      current: \"2012-05-16\",\n      minDate: \"2012-05-10\",\n      displayLoadingIndicator: true,\n      markingType: \"period\",\n      theme: {\n        calendarBackground: \"#333248\",\n        textSectionTitleColor: \"white\",\n        textSectionTitleDisabledColor: \"gray\",\n        dayTextColor: \"red\",\n        todayTextColor: \"white\",\n        selectedDayTextColor: \"white\",\n        monthTextColor: \"white\",\n        indicatorColor: \"white\",\n        selectedDayBackgroundColor: \"#333248\",\n        arrowColor: \"white\",\n        \"stylesheet.calendar.header\": {\n          week: {\n            marginTop: 5,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }\n        }\n      },\n      markedDates: {\n        \"2012-05-17\": {\n          disabled: true\n        },\n        \"2012-05-08\": {\n          textColor: \"pink\"\n        },\n        \"2012-05-09\": {\n          textColor: \"pink\"\n        },\n        \"2012-05-14\": {\n          startingDay: true,\n          color: \"green\",\n          endingDay: true\n        },\n        \"2012-05-21\": {\n          startingDay: true,\n          color: \"green\"\n        },\n        \"2012-05-22\": {\n          endingDay: true,\n          color: \"gray\"\n        },\n        \"2012-05-24\": {\n          startingDay: true,\n          color: \"gray\"\n        },\n        \"2012-05-25\": {\n          color: \"gray\"\n        },\n        \"2012-05-26\": {\n          endingDay: true,\n          color: \"gray\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithPeriodMarkingAndDotMarking = function renderCalendarWithPeriodMarkingAndDotMarking() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, \"Calendar with period marking and dot marking\"), React.createElement(Calendar, {\n      current: \"2012-05-16\",\n      minDate: \"2012-05-01\",\n      disabledDaysIndexes: [0, 6],\n      markingType: \"period\",\n      markedDates: _objectSpread({\n        \"2012-05-15\": {\n          marked: true,\n          dotColor: \"#50cebb\"\n        },\n        \"2012-05-16\": {\n          marked: true,\n          dotColor: \"#50cebb\"\n        },\n        \"2012-05-21\": {\n          startingDay: true,\n          color: \"#50cebb\",\n          textColor: \"white\"\n        },\n        \"2012-05-22\": {\n          color: \"#70d7c7\",\n          customTextStyle: {\n            color: \"#FFFAAA\",\n            fontWeight: \"700\"\n          }\n        },\n        \"2012-05-23\": {\n          color: \"#70d7c7\",\n          textColor: \"white\",\n          marked: true,\n          dotColor: \"white\"\n        },\n        \"2012-05-24\": {\n          color: \"#70d7c7\",\n          textColor: \"white\"\n        },\n        \"2012-05-25\": {\n          endingDay: true,\n          color: \"#50cebb\",\n          textColor: \"white\",\n          customContainerStyle: {\n            borderTopRightRadius: 5,\n            borderBottomRightRadius: 5\n          }\n        }\n      }, getDisabledDates(\"2012-05-01\", \"2012-05-30\", [0, 6])),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMultiDotMarking = function renderCalendarWithMultiDotMarking() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, \"Calendar with multi-dot marking\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: \"2012-05-16\",\n      markingType: \"multi-dot\",\n      markedDates: {\n        \"2012-05-08\": {\n          selected: true,\n          dots: [{\n            key: \"vacation\",\n            color: \"blue\",\n            selectedDotColor: \"red\"\n          }, {\n            key: \"massage\",\n            color: \"red\",\n            selectedDotColor: \"white\"\n          }]\n        },\n        \"2012-05-09\": {\n          disabled: true,\n          dots: [{\n            key: \"vacation\",\n            color: \"green\",\n            selectedDotColor: \"red\"\n          }, {\n            key: \"massage\",\n            color: \"red\",\n            selectedDotColor: \"green\"\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMultiPeriodMarking = function renderCalendarWithMultiPeriodMarking() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"Calendar with multi-period marking\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: \"2012-05-16\",\n      markingType: \"multi-period\",\n      markedDates: {\n        \"2012-05-16\": {\n          periods: [{\n            startingDay: true,\n            endingDay: false,\n            color: \"green\"\n          }, {\n            startingDay: true,\n            endingDay: false,\n            color: \"orange\"\n          }]\n        },\n        \"2012-05-17\": {\n          periods: [{\n            startingDay: false,\n            endingDay: true,\n            color: \"green\"\n          }, {\n            startingDay: false,\n            endingDay: true,\n            color: \"orange\"\n          }, {\n            startingDay: true,\n            endingDay: false,\n            color: \"pink\"\n          }]\n        },\n        \"2012-05-18\": {\n          periods: [{\n            startingDay: true,\n            endingDay: true,\n            color: \"orange\"\n          }, {\n            color: \"transparent\"\n          }, {\n            startingDay: false,\n            endingDay: false,\n            color: \"pink\"\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithCustomMarkingType = function renderCalendarWithCustomMarkingType() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, \"Custom calendar with custom marking type\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      onDayLongPress: _this.onDayLongPress,\n      hideExtraDays: true,\n      current: \"2018-03-01\",\n      minDate: \"2018-03-01\",\n      markingType: \"custom\",\n      markedDates: {\n        \"2018-03-01\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"white\",\n              elevation: 2\n            },\n            text: {\n              color: \"red\"\n            }\n          }\n        },\n        \"2018-03-08\": {\n          selected: true\n        },\n        \"2018-03-09\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"red\",\n              elevation: 4\n            },\n            text: {\n              color: \"white\"\n            }\n          }\n        },\n        \"2018-03-14\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"green\"\n            },\n            text: {\n              color: \"white\"\n            }\n          }\n        },\n        \"2018-03-15\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"black\",\n              elevation: 2\n            },\n            text: {\n              color: \"yellow\"\n            }\n          }\n        },\n        \"2018-03-21\": {\n          disabled: true\n        },\n        \"2018-03-28\": {\n          customStyles: {\n            text: {\n              color: \"black\",\n              fontWeight: \"bold\"\n            }\n          }\n        },\n        \"2018-03-30\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"pink\",\n              elevation: 4,\n              borderColor: \"purple\",\n              borderWidth: 5\n            },\n            text: {\n              marginTop: 3,\n              fontSize: 11,\n              color: \"black\"\n            }\n          }\n        },\n        \"2018-03-31\": {\n          customStyles: {\n            container: {\n              backgroundColor: \"orange\",\n              borderRadius: 0\n            }\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithCustomDay = function renderCalendarWithCustomDay() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }\n    }, \"Calendar with custom day component\"), React.createElement(Calendar, {\n      testID: testIDs.calendars.LAST,\n      style: [styles.calendar, {\n        height: 250,\n        borderBottomWidth: 1,\n        borderBottomColor: \"lightgrey\"\n      }],\n      dayComponent: function dayComponent(_ref2) {\n        var date = _ref2.date,\n            state = _ref2.state;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            color: state === \"disabled\" ? \"gray\" : \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }\n        }, date.day));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    testID: testIDs.calendars.CONTAINER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 5\n    }\n  }, renderCalendarWithSelectableDate(), renderCalendarWithWeekNumbers(), renderCalendarWithMarkedDatesAndHiddenArrows(), renderCalendarWithPeriodMarkingAndSpinner(), renderCalendarWithPeriodMarkingAndDotMarking(), renderCalendarWithMultiDotMarking(), renderCalendarWithMultiPeriodMarking(), renderCalendarWithCustomMarkingType(), renderCalendarWithCustomDay());\n};\n\nexport default Fitnessplan;\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: \"center\",\n    padding: 10,\n    backgroundColor: \"lightgrey\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Desktop/FitnessAppMobil/screens/Fitnessplan.js"],"names":["React","useState","Fragment","Calendar","moment","_","testIDs","require","Fitnessplan","selected","setSelected","onDayPress","day","dateString","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","start","end","m","diff","add","includes","weekday","format","disabled","renderCalendarWithSelectableDate","styles","text","calendars","FIRST","calendar","disableTouchEvent","selectedColor","selectedTextColor","renderCalendarWithWeekNumbers","renderCalendarWithMarkedDatesAndHiddenArrows","marked","dotColor","activeOpacity","renderCalendarWithPeriodMarkingAndSpinner","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","dayTextColor","todayTextColor","selectedDayTextColor","monthTextColor","indicatorColor","selectedDayBackgroundColor","arrowColor","week","marginTop","flexDirection","justifyContent","textColor","startingDay","color","endingDay","renderCalendarWithPeriodMarkingAndDotMarking","customTextStyle","fontWeight","customContainerStyle","borderTopRightRadius","borderBottomRightRadius","renderCalendarWithMultiDotMarking","dots","key","selectedDotColor","renderCalendarWithMultiPeriodMarking","periods","renderCalendarWithCustomMarkingType","onDayLongPress","customStyles","container","backgroundColor","elevation","borderColor","borderWidth","fontSize","borderRadius","renderCalendarWithCustomDay","LAST","height","borderBottomWidth","borderBottomColor","date","state","textAlign","CONTAINER","StyleSheet","create","marginBottom","padding"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { StyleSheet, View, ScrollView, Text } from \"react-native\";\r\nimport { Calendar } from \"react-native-calendars\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nconst testIDs = require(\"./testIDs\");\r\n\r\nconst Fitnessplan = () => {\r\n  const [selected, setSelected] = useState(\"\");\r\n\r\n  const onDayPress = (day) => {\r\n    setSelected(day.dateString);\r\n  };\r\n\r\n  const getDisabledDates = (startDate, endDate, daysToDisable) => {\r\n    const disabledDates = {};\r\n    const start = moment(startDate);\r\n    const end = moment(endDate);\r\n    for (let m = moment(start); m.diff(end, \"days\") <= 0; m.add(1, \"days\")) {\r\n      if (_.includes(daysToDisable, m.weekday())) {\r\n        disabledDates[m.format(\"YYYY-MM-DD\")] = { disabled: true };\r\n      }\r\n    }\r\n    return disabledDates;\r\n  };\r\n\r\n  const renderCalendarWithSelectableDate = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with selectable date</Text>\r\n        <Calendar\r\n          testID={testIDs.calendars.FIRST}\r\n          current={\"2020-02-02\"}\r\n          style={styles.calendar}\r\n          hideExtraDays\r\n          onDayPress={onDayPress}\r\n          markedDates={{\r\n            [selected]: {\r\n              selected: true,\r\n              disableTouchEvent: true,\r\n              selectedColor: \"orange\",\r\n              selectedTextColor: \"red\",\r\n            },\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithWeekNumbers = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with week numbers</Text>\r\n        <Calendar style={styles.calendar} hideExtraDays showWeekNumbers />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMarkedDatesAndHiddenArrows = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>\r\n          Calendar with marked dates and hidden arrows\r\n        </Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={\"2012-05-16\"}\r\n          minDate={\"2012-05-10\"}\r\n          maxDate={\"2012-05-29\"}\r\n          disableAllTouchEventsForDisabledDays\r\n          firstDay={1}\r\n          markedDates={{\r\n            \"2012-05-23\": {\r\n              selected: true,\r\n              marked: true,\r\n              disableTouchEvent: true,\r\n            },\r\n            \"2012-05-24\": { selected: true, marked: true, dotColor: \"red\" },\r\n            \"2012-05-25\": { marked: true, dotColor: \"red\" },\r\n            \"2012-05-26\": { marked: true },\r\n            \"2012-05-27\": {\r\n              disabled: true,\r\n              activeOpacity: 0,\r\n              disableTouchEvent: false,\r\n            },\r\n          }}\r\n          hideArrows={true}\r\n          // disabledByDefault={true}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithPeriodMarkingAndSpinner = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>\r\n          Calendar with period marking and spinner\r\n        </Text>\r\n        <Calendar\r\n          // style={styles.calendar}\r\n          current={\"2012-05-16\"}\r\n          minDate={\"2012-05-10\"}\r\n          displayLoadingIndicator\r\n          markingType={\"period\"}\r\n          theme={{\r\n            calendarBackground: \"#333248\",\r\n            textSectionTitleColor: \"white\",\r\n            textSectionTitleDisabledColor: \"gray\",\r\n            dayTextColor: \"red\",\r\n            todayTextColor: \"white\",\r\n            selectedDayTextColor: \"white\",\r\n            monthTextColor: \"white\",\r\n            indicatorColor: \"white\",\r\n            selectedDayBackgroundColor: \"#333248\",\r\n            arrowColor: \"white\",\r\n            // textDisabledColor: 'red',\r\n            \"stylesheet.calendar.header\": {\r\n              week: {\r\n                marginTop: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              },\r\n            },\r\n          }}\r\n          markedDates={{\r\n            \"2012-05-17\": { disabled: true },\r\n            \"2012-05-08\": { textColor: \"pink\" },\r\n            \"2012-05-09\": { textColor: \"pink\" },\r\n            \"2012-05-14\": {\r\n              startingDay: true,\r\n              color: \"green\",\r\n              endingDay: true,\r\n            },\r\n            \"2012-05-21\": { startingDay: true, color: \"green\" },\r\n            \"2012-05-22\": { endingDay: true, color: \"gray\" },\r\n            \"2012-05-24\": { startingDay: true, color: \"gray\" },\r\n            \"2012-05-25\": { color: \"gray\" },\r\n            \"2012-05-26\": { endingDay: true, color: \"gray\" },\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithPeriodMarkingAndDotMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>\r\n          Calendar with period marking and dot marking\r\n        </Text>\r\n        <Calendar\r\n          current={\"2012-05-16\"}\r\n          minDate={\"2012-05-01\"}\r\n          disabledDaysIndexes={[0, 6]}\r\n          markingType={\"period\"}\r\n          markedDates={{\r\n            \"2012-05-15\": { marked: true, dotColor: \"#50cebb\" },\r\n            \"2012-05-16\": { marked: true, dotColor: \"#50cebb\" },\r\n            \"2012-05-21\": {\r\n              startingDay: true,\r\n              color: \"#50cebb\",\r\n              textColor: \"white\",\r\n            },\r\n            \"2012-05-22\": {\r\n              color: \"#70d7c7\",\r\n              customTextStyle: {\r\n                color: \"#FFFAAA\",\r\n                fontWeight: \"700\",\r\n              },\r\n            },\r\n            \"2012-05-23\": {\r\n              color: \"#70d7c7\",\r\n              textColor: \"white\",\r\n              marked: true,\r\n              dotColor: \"white\",\r\n            },\r\n            \"2012-05-24\": { color: \"#70d7c7\", textColor: \"white\" },\r\n            \"2012-05-25\": {\r\n              endingDay: true,\r\n              color: \"#50cebb\",\r\n              textColor: \"white\",\r\n              customContainerStyle: {\r\n                borderTopRightRadius: 5,\r\n                borderBottomRightRadius: 5,\r\n              },\r\n            },\r\n            ...getDisabledDates(\"2012-05-01\", \"2012-05-30\", [0, 6]),\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMultiDotMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with multi-dot marking</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={\"2012-05-16\"}\r\n          markingType={\"multi-dot\"}\r\n          markedDates={{\r\n            \"2012-05-08\": {\r\n              selected: true,\r\n              dots: [\r\n                { key: \"vacation\", color: \"blue\", selectedDotColor: \"red\" },\r\n                { key: \"massage\", color: \"red\", selectedDotColor: \"white\" },\r\n              ],\r\n            },\r\n            \"2012-05-09\": {\r\n              disabled: true,\r\n              dots: [\r\n                { key: \"vacation\", color: \"green\", selectedDotColor: \"red\" },\r\n                { key: \"massage\", color: \"red\", selectedDotColor: \"green\" },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMultiPeriodMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with multi-period marking</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={\"2012-05-16\"}\r\n          markingType={\"multi-period\"}\r\n          markedDates={{\r\n            \"2012-05-16\": {\r\n              periods: [\r\n                { startingDay: true, endingDay: false, color: \"green\" },\r\n                { startingDay: true, endingDay: false, color: \"orange\" },\r\n              ],\r\n            },\r\n            \"2012-05-17\": {\r\n              periods: [\r\n                { startingDay: false, endingDay: true, color: \"green\" },\r\n                { startingDay: false, endingDay: true, color: \"orange\" },\r\n                { startingDay: true, endingDay: false, color: \"pink\" },\r\n              ],\r\n            },\r\n            \"2012-05-18\": {\r\n              periods: [\r\n                { startingDay: true, endingDay: true, color: \"orange\" },\r\n                { color: \"transparent\" },\r\n                { startingDay: false, endingDay: false, color: \"pink\" },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithCustomMarkingType = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>\r\n          Custom calendar with custom marking type\r\n        </Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          onDayLongPress={this.onDayLongPress}\r\n          hideExtraDays\r\n          current={\"2018-03-01\"}\r\n          minDate={\"2018-03-01\"}\r\n          markingType={\"custom\"}\r\n          markedDates={{\r\n            \"2018-03-01\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"white\",\r\n                  elevation: 2,\r\n                },\r\n                text: {\r\n                  color: \"red\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-08\": {\r\n              selected: true,\r\n            },\r\n            \"2018-03-09\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"red\",\r\n                  elevation: 4,\r\n                },\r\n                text: {\r\n                  color: \"white\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-14\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"green\",\r\n                },\r\n                text: {\r\n                  color: \"white\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-15\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"black\",\r\n                  elevation: 2,\r\n                },\r\n                text: {\r\n                  color: \"yellow\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-21\": {\r\n              disabled: true,\r\n            },\r\n            \"2018-03-28\": {\r\n              customStyles: {\r\n                text: {\r\n                  color: \"black\",\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-30\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"pink\",\r\n                  elevation: 4,\r\n                  borderColor: \"purple\",\r\n                  borderWidth: 5,\r\n                },\r\n                text: {\r\n                  marginTop: 3,\r\n                  fontSize: 11,\r\n                  color: \"black\",\r\n                },\r\n              },\r\n            },\r\n            \"2018-03-31\": {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: \"orange\",\r\n                  borderRadius: 0,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithCustomDay = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with custom day component</Text>\r\n        <Calendar\r\n          testID={testIDs.calendars.LAST}\r\n          style={[\r\n            styles.calendar,\r\n            {\r\n              height: 250,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"lightgrey\",\r\n            },\r\n          ]}\r\n          dayComponent={({ date, state }) => {\r\n            return (\r\n              <View>\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: state === \"disabled\" ? \"gray\" : \"black\",\r\n                  }}\r\n                >\r\n                  {date.day}\r\n                </Text>\r\n              </View>\r\n            );\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      testID={testIDs.calendars.CONTAINER}\r\n    >\r\n      {renderCalendarWithSelectableDate()}\r\n      {renderCalendarWithWeekNumbers()}\r\n      {renderCalendarWithMarkedDatesAndHiddenArrows()}\r\n      {renderCalendarWithPeriodMarkingAndSpinner()}\r\n      {renderCalendarWithPeriodMarkingAndDotMarking()}\r\n      {renderCalendarWithMultiDotMarking()}\r\n      {renderCalendarWithMultiPeriodMarking()}\r\n      {renderCalendarWithCustomMarkingType()}\r\n      {renderCalendarWithCustomDay()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Fitnessplan;\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"lightgrey\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}